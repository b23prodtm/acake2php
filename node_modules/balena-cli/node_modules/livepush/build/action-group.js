"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAffectedLocalCopies = exports.getActionGroupFileFilter = exports.fileMatchesForActionGroup = exports.isChildPath = void 0;
const _ = require("lodash");
const minimatch = require("minimatch");
const path = require("path");
function isChildPath(parent, child) {
    const relative = path.relative(parent, child);
    return !!relative && !relative.startsWith('..') && !path.isAbsolute(relative);
}
exports.isChildPath = isChildPath;
function copyMatchesFile(copy, file) {
    return minimatch(file, copy.source) || isChildPath(copy.source, file);
}
function fileMatchesForActionGroup(files, actionGroup) {
    return _(actionGroup.copies)
        .flatMap(copy => files.filter(f => copyMatchesFile(copy, f)))
        .uniq()
        .value();
}
exports.fileMatchesForActionGroup = fileMatchesForActionGroup;
function getActionGroupFileFilter(actionGroup) {
    return (file) => {
        return _.some(actionGroup.copies, copy => copyMatchesFile(copy, file));
    };
}
exports.getActionGroupFileFilter = getActionGroupFileFilter;
function getAffectedLocalCopies(actionGroup, file) {
    return _(actionGroup.copies)
        .filter(c => copyMatchesFile(c, file))
        .map(copy => {
        return { file, copy };
    })
        .value();
}
exports.getAffectedLocalCopies = getAffectedLocalCopies;
//# sourceMappingURL=action-group.js.map