import { TypedError } from 'typed-error';
export declare class ImageRemovalError extends TypedError {
}
export declare class TarError extends TypedError {
}
export declare class BuildProcessError extends TypedError {
}
export declare class DockerCommunicationError extends TypedError {
}
export declare class RegistrySecretValidationError extends TypedError {
}
export declare class BalenaYMLValidationError extends TypedError {
}
export declare class BuildSecretMissingError extends TypedError {
}
export declare class SecretPopulationError extends TypedError {
}
export declare class SecretRemovalError extends TypedError {
}
export declare class UnsupportedDockerArchError extends TypedError {
}
export declare class MultipleMetadataDirectoryError extends TypedError {
}
export declare class MultipleBalenaConfigFilesError extends TypedError {
    filesFound: string[];
    constructor(filesFound: string[]);
}
export declare class ContractError extends TypedError {
}
export declare class MultipleContractsForService extends ContractError {
    serviceName: string;
    constructor(serviceName: string);
}
export declare class NonUniqueContractNameError extends ContractError {
    nonUniqueNames: {
        [contractName: string]: string[];
    };
    constructor(nonUniqueNames: {
        [contractName: string]: string[];
    });
}
export declare class ContractValidationError extends ContractError {
}
