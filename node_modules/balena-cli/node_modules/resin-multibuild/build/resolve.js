"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.resolveTask = void 0;
const _ = require("lodash");
const Resolve = require("resin-bundle-resolve");
function resolveTask(task, architecture, deviceType, resolveListeners, additionalVars = {}, dockerfilePreprocessHook) {
    if (task.external) {
        return task;
    }
    let resolveTaskPromise;
    task.resolvedPromise = new Promise(resolve => {
        resolveTaskPromise = resolve;
    });
    const dockerfileHook = (content) => {
        if (dockerfilePreprocessHook) {
            task.dockerfile = dockerfilePreprocessHook(content);
            return task.dockerfile;
        }
        else {
            task.dockerfile = content;
        }
    };
    const bundle = new Resolve.Bundle(task.buildStream, deviceType, architecture, dockerfileHook);
    const resolvers = Resolve.getDefaultResolvers();
    const listeners = _.cloneDeep(resolveListeners);
    (listeners['resolver'] = listeners['resolver'] || []).push((resolverName) => {
        task.projectType = resolverName;
        task.resolved = true;
        resolveTaskPromise();
    });
    (listeners['resolved-name'] = listeners['resolved-name'] || []).push((resolvedName) => {
        task.dockerfilePath = resolvedName;
    });
    const templateVars = Object.assign({ BALENA_SERVICE_NAME: task.serviceName }, additionalVars);
    task.buildStream = Resolve.resolveInput(bundle, resolvers, listeners, task.dockerfilePath, templateVars);
    return task;
}
exports.resolveTask = resolveTask;
//# sourceMappingURL=resolve.js.map