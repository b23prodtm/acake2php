/// <reference types="node" />
import * as Stream from 'stream';
import { BalenaYml } from './build-secrets';
import { RegistrySecrets } from './registry-secrets';
export declare const QEMU_BIN_NAME = "qemu-execve";
export declare class BuildMetadata {
    protected metadataDirectories: string[];
    registrySecrets: RegistrySecrets;
    protected metadataFiles: Dictionary<Buffer>;
    protected balenaYml: BalenaYml;
    constructor(metadataDirectories: string[]);
    extractMetadata(tarStream: Stream.Readable): Promise<Stream.Readable>;
    getBalenaYml(): BalenaYml;
    getSecretFile(source: string): Buffer | undefined;
    parseMetadata(): void;
    getBuildVarsForService(serviceName: string): Dictionary<string>;
    protected parseRegistrySecrets(): void;
    protected addMetadataFile(name: string, data: Buffer): void;
    protected getMetadataRelativePath(path: string): {
        relativePath: string;
        metadataDirectory: string;
    } | undefined;
}
export default BuildMetadata;
