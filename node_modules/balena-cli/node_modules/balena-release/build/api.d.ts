import { PinejsClientRequest } from 'pinejs-client-request';
import { Composition } from 'resin-compose-parse';
import * as models from './models';
import { Dict } from './types';
export interface ClientConfig {
    apiEndpoint: string;
    auth: string;
}
export declare function createClient(config: ClientConfig): PinejsClientRequest;
export interface Request {
    client: PinejsClientRequest;
    user: number;
    application: number;
    composition: Composition;
    source: string;
    commit: string;
}
export interface Response {
    release: models.ReleaseModel;
    serviceImages: Dict<models.ImageModel>;
}
export declare function create(req: Request): Promise<Response>;
export declare function updateRelease(api: PinejsClientRequest, id: number, body: Partial<models.ReleaseAttributes>): Promise<models.ReleaseModel>;
export declare function updateImage(api: PinejsClientRequest, id: number, body: Partial<models.ImageAttributes>): Promise<models.ImageModel>;
