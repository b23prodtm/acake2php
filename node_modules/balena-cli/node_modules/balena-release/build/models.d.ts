import type { PinejsClientRequest } from 'pinejs-client-request';
import type { Expand, Filter, ODataOptions } from 'pinejs-client-core';
import type { Composition } from 'resin-compose-parse';
interface ServiceAttributesBase {
    service_name: string;
}
interface ReleaseAttributesBase {
    composition: Composition;
    commit: string;
    status: string;
    source: string;
    start_timestamp: Date;
    end_timestamp?: Date;
}
interface ReleaseImageAttributesBase {
}
interface ImageAttributesBase {
    start_timestamp: Date;
    end_timestamp?: Date;
    dockerfile?: string;
    image_size?: number;
    project_type?: string;
    error_message?: string;
    build_log?: string;
    push_timestamp?: Date;
    status: string;
    content_hash?: string;
}
export interface ServiceAttributes extends ServiceAttributesBase {
    application: number;
}
export interface ReleaseAttributes extends ReleaseAttributesBase {
    is_created_by__user: number;
    belongs_to__application: number;
}
export interface ImageAttributes extends ImageAttributesBase {
    is_a_build_of__service: number;
}
export interface ReleaseImageAttributes extends ReleaseImageAttributesBase {
    is_part_of__release: number;
    image: number;
}
export interface UserModel {
    id: number;
}
export interface ApplicationModel {
    id: number;
}
export interface ServiceModel extends ServiceAttributesBase {
    id: number;
}
export interface ReleaseModel extends ReleaseAttributesBase {
    id: number;
}
export interface ImageModel extends ImageAttributesBase {
    id: number;
    is_stored_at__image_location: string;
}
export interface ReleaseImageModel extends ReleaseImageAttributesBase {
    id: number;
}
export declare function getOrCreate<T, U, V extends Filter>(api: PinejsClientRequest, resource: string, body: U, filter: V): Promise<T>;
export declare function create<T, U>(api: PinejsClientRequest, resource: string, body: U): Promise<T>;
export declare function update<T, U>(api: PinejsClientRequest, resource: string, id: number, body: U): Promise<T>;
export declare function find<T>(api: PinejsClientRequest, resource: string, options: ODataOptions): Promise<T[]>;
export declare function get<T>(api: PinejsClientRequest, resource: string, id: number, expand?: Expand): Promise<T>;
export {};
