/// <reference types="node" />
import * as Bluebird from 'bluebird';
import * as fs from 'fs';
export declare const open: (path: string, flags: string | number, mode?: number | undefined) => Bluebird<number>;
export declare const close: (fd: number) => Bluebird<void>;
export declare const fstat: (arg1: number) => Bluebird<fs.Stats>;
export declare const fdatasync: (fd: number) => Bluebird<void>;
export interface ReadResult {
    bytesRead: number;
    buffer: Buffer;
}
export interface WriteResult {
    bytesWritten: number;
    buffer: Buffer;
}
export declare const read: (fd: number, buf: Buffer, offset: number, length: number, position: number) => Promise<ReadResult>;
export declare const write: (fd: number, buf: Buffer, offset: number, length: number, position: number) => Promise<WriteResult>;
