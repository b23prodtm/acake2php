"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.lintMochaTests = exports.MochaListResult = void 0;
const fs_1 = require("fs");
class MochaListResult {
    constructor(message, isError) {
        this.message = message;
        this.isError = isError;
    }
}
exports.MochaListResult = MochaListResult;
const checkPattern = /(describe|it)\.only/;
async function lintMochaTests(scripts) {
    let errorsFound = false;
    let message = '';
    const allCheckPromises = scripts.map(async (scriptPath) => {
        const content = await fs_1.promises.readFile(scriptPath, 'utf8');
        const lines = content.split('\n');
        for (let ln = 0; ln < lines.length; ln++) {
            const res = checkPattern.exec(lines[ln]);
            if (res) {
                errorsFound = true;
                message += `File ${scriptPath}, line ${ln}: found ${res[0]}\n`;
            }
        }
    });
    try {
        await Promise.all(allCheckPromises);
        return new MochaListResult(errorsFound ? message : 'OK', errorsFound);
    }
    catch (e) {
        console.error(e);
        return new MochaListResult(`Error reading input files: ${e.message}`, true);
    }
}
exports.lintMochaTests = lintMochaTests;
//# sourceMappingURL=mocha-tests-lint.js.map