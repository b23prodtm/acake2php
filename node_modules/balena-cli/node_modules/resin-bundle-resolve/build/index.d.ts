/// <reference types="node" />
import * as tar from 'tar-stream';
import Bundle from './bundle';
import { FileInfo } from './fileInfo';
import { Resolver } from './resolver';
import ArchDockerfileResolver from './resolvers/archDockerfile';
import DockerfileResolver from './resolvers/dockerfile';
import DockerfileTemplateResolver, { DockerfileTemplateVariableError } from './resolvers/dockerfileTemplate';
export { ArchDockerfileResolver, Bundle, DockerfileResolver, DockerfileTemplateResolver, DockerfileTemplateVariableError, FileInfo, Resolver, };
export interface ResolveListeners {
    close?: Array<() => void>;
    data?: Array<(chunk: Buffer | string) => void>;
    end?: Array<() => void>;
    error?: Array<(e: Error) => void>;
    readable?: Array<() => void>;
    'resolved-name'?: Array<(dockerfilePath: string) => void>;
    resolver?: Array<(resolverName: string) => void>;
}
export declare function resolveInput(bundle: Bundle, resolvers: Resolver[], resolveListeners: ResolveListeners, dockerfile?: string, additionalTemplateVars?: Dictionary<string>): tar.Pack;
export declare function getDefaultResolvers(): Resolver[];
