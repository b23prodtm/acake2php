/// <reference types="node" />
import { TypedError } from 'typed-error';
import { Bundle, FileInfo, Resolver } from '../resolver';
import { ParsedPathPlus } from '../utils';
export declare class DockerfileTemplateVariableError extends TypedError {
}
export declare class DockerfileTemplateResolver implements Resolver {
    priority: number;
    name: string;
    dockerfileContents: string;
    private hasDockerfileTemplate;
    private templateContent;
    entry(file: FileInfo): void;
    needsEntry(entryPath: ParsedPathPlus, specifiedDockerfilePath?: string): boolean;
    isSatisfied(_bundle: Bundle): boolean;
    resolve(bundle: Bundle, specifiedDockerfilePath?: string, additionalTemplateVars?: Dictionary<string>): Promise<{
        contents: Buffer;
        size: number;
        name: string;
    }>;
    getCanonicalName(filename: string): string;
}
export default DockerfileTemplateResolver;
