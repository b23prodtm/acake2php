// Generated by CoffeeScript 1.12.7
(function() {
  var Promise, define, dockerfileTemplate, errno, fs, program, util;

  dockerfileTemplate = require('./lib');

  program = require('commander');

  Promise = require('bluebird');

  fs = Promise.promisifyAll(require('fs'));

  errno = require('errno').errno;

  util = require('util');

  define = function(def, defs) {
    var _, match, value, variable;
    match = def.match(/^([A-Z][A-Z_]+)=(.*)/);
    if (!match) {
      program.help();
      program.exit();
    }
    _ = match[0], variable = match[1], value = match[2];
    defs[variable] = value;
    return defs;
  };

  program.usage('[options]').version(require('./package.json').version).option('-f, --filename <templatefile>', 'template file to process (default: Dockerfile.template)', 'Dockerfile.template').option('-d, --define [VARIABLE=value]', 'replace variable with value (repeatable option)', define, {}).parse(process.argv);

  fs.readFileAsync(program.filename, 'utf-8')["catch"](Promise.OperationalError, function(e) {
    var desc;
    desc = errno[e.errno].description;
    console.error("Error reading '" + program.filename + "': " + desc);
    return process.exit(1);
  }).then(function(body) {
    var res;
    res = dockerfileTemplate.process(body, program.define);
    return process.stdout.write(res);
  })["catch"](ReferenceError, function(e) {
    return console.error(e.message);
  })["catch"](function(e) {
    return console.error('Unknown error:', e);
  });

}).call(this);
