/// <reference types="node" />
import * as Bluebird from 'bluebird';
import { Readable, Writable } from 'stream';
import * as tar from 'tar-stream';
export declare function normalizeTarEntry(name: string): string;
export declare function streamToBuffer(stream: Readable): Bluebird<Buffer>;
export declare function drainStream(stream: Readable): Bluebird<void>;
export declare function pipePromise<WritableSub extends Writable>(pipeFrom: Readable, pipeTo: WritableSub): Bluebird<WritableSub>;
export declare function cloneTarStream(sourceTarStream: Readable, opts?: {
    onEntry?: (pack: tar.Pack, header: tar.Headers, stream: Readable) => void;
    onFinish?: (pack: tar.Pack) => void;
}): Bluebird<tar.Pack>;
export declare function multicastStream(fromStream: Readable, toStreams: Writable[]): Bluebird<void>;
