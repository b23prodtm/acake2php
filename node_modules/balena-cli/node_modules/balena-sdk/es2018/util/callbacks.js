"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.addCallbackSupportToModuleFactory = exports.addCallbackSupportToModule = void 0;
// Use with: `findCallback(arguments)`.
const findCallback = (args) => {
    const lastArg = args[args.length - 1];
    if (typeof lastArg === 'function') {
        return lastArg;
    }
    return;
};
const isThenable = (a) => {
    return typeof a === 'object' && typeof a.then === 'function';
};
const addCallbackSupport = (fn) => {
    return function () {
        const callback = findCallback(arguments);
        const result = fn.apply(this, arguments);
        if (!callback || !isThenable(result)) {
            return result;
        }
        result.then((v) => callback(null, v), callback);
        return result;
    };
};
const addCallbackSupportToModule = (sdkModule) => {
    const result = {};
    for (const key of Object.keys(sdkModule)) {
        const moduleProp = sdkModule[key];
        const shouldAddCallback = typeof key === 'string' &&
            !key.startsWith('_') &&
            typeof moduleProp === 'function';
        result[key] = shouldAddCallback
            ? addCallbackSupport(moduleProp)
            : moduleProp;
    }
    return result;
};
exports.addCallbackSupportToModule = addCallbackSupportToModule;
const addCallbackSupportToModuleFactory = (moduleFactory) => {
    return function () {
        return exports.addCallbackSupportToModule(moduleFactory.apply(this, arguments));
    };
};
exports.addCallbackSupportToModuleFactory = addCallbackSupportToModuleFactory;
