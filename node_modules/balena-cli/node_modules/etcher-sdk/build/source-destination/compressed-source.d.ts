/// <reference types="node" />
import { Transform } from 'stream';
import { Metadata } from './metadata';
import { SourceSource } from './source-source';
export interface SourceTransform extends Transform {
    sourceStream: NodeJS.ReadableStream;
}
export declare function isSourceTransform(stream: any): stream is SourceTransform;
export declare function getRootStream(stream: NodeJS.ReadableStream): NodeJS.ReadableStream;
export declare abstract class CompressedSource extends SourceSource {
    protected abstract createTransform(): Transform;
    protected isSizeEstimated: boolean;
    protected getSize(): Promise<number | undefined>;
    canCreateReadStream(): Promise<boolean>;
    createReadStream(emitProgress?: boolean, start?: number, end?: number): Promise<SourceTransform>;
    protected _getMetadata(): Promise<Metadata>;
}
