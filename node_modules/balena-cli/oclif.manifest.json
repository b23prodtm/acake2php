{"version":"12.38.8","commands":{"apps":{"id":"apps","description":"List all applications.\n\nlist all your balena applications.\n\nFor detailed information on a particular application,\nuse `balena app <application>` instead.","usage":"apps","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena apps"],"flags":{"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false},"verbose":{"name":"verbose","type":"boolean","char":"v","description":"No-op since release v12.0.0","allowNo":false}},"args":[]},"build":{"id":"build","description":"Build a project locally.\n\nUse this command to build an image or a complete multicontainer project with\nthe provided docker daemon in your development machine or balena device.\n(See also the `balena push` command for the option of building images in the\nbalenaCloud build servers.)\n\nYou must provide either an application or a device-type/architecture pair.\n\nThis command will look into the given source directory (or the current working\ndirectory if one isn't specified) for a docker-compose.yml file, and if found,\neach service defined in the compose file will be built. If a compose file isn't\nfound, it will look for a Dockerfile[.template] file (or alternative Dockerfile\nspecified with the `--dockerfile` option), and if no dockerfile is found, it\nwill try to generate one.\n\nREGISTRY SECRETS  \nThe --registry-secrets option specifies a JSON or YAML file containing private\nDocker registry usernames and passwords to be used when pulling base images.\nSample registry-secrets YAML file:\n```\n\t'my-registry-server.com:25000':\n\t\tusername: ann\n\t\tpassword: hunter2\n\t'':  # Use the empty string to refer to the Docker Hub\n\t\tusername: mike\n\t\tpassword: cze14\n\t'eu.gcr.io':  # Google Container Registry\n\t\tusername: '_json_key'\n\t\tpassword: '{escaped contents of the GCR keyfile.json file}'\n```\nFor a sample project using registry secrets with the Google Container Registry,\ncheck: https://github.com/balena-io-examples/sample-gcr-registry-secrets\n\nIf the --registry-secrets option is not specified, and a secrets.yml or\nsecrets.json file exists in the balena directory (usually $HOME/.balena),\nthis file will be used instead.\n\nDOCKERIGNORE AND GITIGNORE FILES  \nBy default, the balena CLI will use a single \".dockerignore\" file (if any) at\nthe project root (--source directory) in order to decide which source files to\nexclude from the \"build context\" (tar stream) sent to balenaCloud, Docker\ndaemon or balenaEngine. In a microservices (multicontainer) application, the\nsource directory is the directory that contains the \"docker-compose.yml\" file.\n\nThe --multi-dockerignore (-m) option may be used with microservices\n(multicontainer) applications that define a docker-compose.yml file. When\nthis option is used, each service subdirectory (defined by the `build` or\n`build.context` service properties in the docker-compose.yml file) is\nfiltered separately according to a .dockerignore file defined in the service\nsubdirectory. If no .dockerignore file exists in a service subdirectory, then\nonly the default .dockerignore patterns (see below) apply for that service\nsubdirectory.\n\nWhen the --multi-dockerignore (-m) option is used, the .dockerignore file (if\nany) defined at the overall project root will be used to filter files and\nsubdirectories other than service subdirectories. It will not have any effect\non service subdirectories, whether or not a service subdirectory defines its\nown .dockerignore file. Multiple .dockerignore files are not merged or added\ntogether, and cannot override or extend other files. This behavior maximizes\ncompatibility with the standard docker-compose tool, while still allowing a\nroot .dockerignore file (at the overall project root) to filter files and\nfolders that are outside service subdirectories.\n\nbalena CLI releases older than v12.0.0 also took .gitignore files into account.\nThis behavior is deprecated, but may still be enabled with the --gitignore (-g)\noption if compatibility is required. This option is mutually exclusive with\n--multi-dockerignore (-m) and will be removed in the CLI's next major version\nrelease (v13).\n\nDefault .dockerignore patterns  \nWhen --gitignore (-g) is NOT used (i.e. when not in v11 compatibility mode), a\nfew default/hardcoded dockerignore patterns are \"merged\" (in memory) with the\npatterns found in the applicable .dockerignore files, in the following order:\n```\n    **/.git\n    < user's patterns from the applicable '.dockerignore' file, if any >\n    !**/.balena\n    !**/.resin\n    !**/Dockerfile\n    !**/Dockerfile.*\n    !**/docker-compose.yml\n```\nThese patterns always apply, whether or not .dockerignore files exist in the\nproject. If necessary, the effect of the `**/.git` pattern may be modified by\nadding counter patterns to the applicable .dockerignore file(s), for example\n`!mysubmodule/.git`. For documentation on pattern format, see:\n- https://docs.docker.com/engine/reference/builder/#dockerignore-file\n- https://www.npmjs.com/package/@balena/dockerignore\n","usage":"build [source]","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena build --application myApp","$ balena build ./source/ --application myApp","$ balena build --deviceType raspberrypi3 --arch armv7hf --emulated","$ balena build --docker /var/run/docker.sock --application myApp   # Linux, Mac","$ balena build --docker //./pipe/docker_engine --application myApp # Windows","$ balena build --dockerHost my.docker.host --dockerPort 2376 --ca ca.pem --key key.pem --cert cert.pem -a myApp"],"flags":{"arch":{"name":"arch","type":"option","char":"A","description":"the architecture to build for"},"deviceType":{"name":"deviceType","type":"option","char":"d","description":"the type of device this build is for"},"application":{"name":"application","type":"option","char":"a","description":"name of the target balena application this build is for"},"emulated":{"name":"emulated","type":"boolean","char":"e","description":"Use QEMU for ARM architecture emulation during the image build","allowNo":false},"dockerfile":{"name":"dockerfile","type":"option","description":"Alternative Dockerfile name/path, relative to the source folder"},"logs":{"name":"logs","type":"boolean","description":"No-op and deprecated since balena CLI v12.0.0. Build logs are now shown by default.","allowNo":false},"nologs":{"name":"nologs","type":"boolean","description":"Hide the image build log output (produce less verbose output)","allowNo":false},"gitignore":{"name":"gitignore","type":"boolean","char":"g","description":"Consider .gitignore files in addition to the .dockerignore file. This reverts\nto the CLI v11 behavior/implementation (deprecated) if compatibility is required\nuntil your project can be adapted.","allowNo":false},"multi-dockerignore":{"name":"multi-dockerignore","type":"boolean","char":"m","description":"Have each service use its own .dockerignore file. See \"balena help build\".","allowNo":false},"nogitignore":{"name":"nogitignore","type":"boolean","char":"G","description":"No-op (default behavior) since balena CLI v12.0.0. See \"balena help build\".","allowNo":false},"noparent-check":{"name":"noparent-check","type":"boolean","description":"Disable project validation check of 'docker-compose.yml' file in parent folder","allowNo":false},"registry-secrets":{"name":"registry-secrets","type":"option","char":"R","description":"Path to a YAML or JSON file with passwords for a private Docker registry"},"convert-eol":{"name":"convert-eol","type":"boolean","char":"l","description":"No-op and deprecated since balena CLI v12.0.0","allowNo":false},"noconvert-eol":{"name":"noconvert-eol","type":"boolean","description":"Don't convert line endings from CRLF (Windows format) to LF (Unix format).","allowNo":false},"projectName":{"name":"projectName","type":"option","char":"n","description":"Specify an alternate project name; default is the directory name"},"tag":{"name":"tag","type":"option","char":"t","description":"The alias to the generated image"},"buildArg":{"name":"buildArg","type":"option","char":"B","description":"Set a build-time variable (eg. \"-B 'ARG=value'\"). Can be specified multiple times."},"cache-from":{"name":"cache-from","type":"option","description":"Comma-separated list (no spaces) of image names for build cache resolution. Implements the same feature as the \"docker build --cache-from\" option."},"nocache":{"name":"nocache","type":"boolean","description":"Don't use docker layer caching when building","allowNo":false},"pull":{"name":"pull","type":"boolean","description":"Pull the base images again even if they exist locally","allowNo":false},"squash":{"name":"squash","type":"boolean","description":"Squash newly built layers into a single new layer","allowNo":false},"docker":{"name":"docker","type":"option","char":"P","description":"Path to a local docker socket (e.g. /var/run/docker.sock)"},"dockerHost":{"name":"dockerHost","type":"option","char":"h","description":"Docker daemon hostname or IP address (dev machine or balena device) "},"dockerPort":{"name":"dockerPort","type":"option","char":"p","description":"Docker daemon TCP port number (hint: 2375 for balena devices)"},"ca":{"name":"ca","type":"option","description":"Docker host TLS certificate authority file"},"cert":{"name":"cert","type":"option","description":"Docker host TLS certificate file"},"key":{"name":"key","type":"option","description":"Docker host TLS key file"},"help":{"name":"help","type":"boolean","description":"show CLI help","allowNo":false}},"args":[{"name":"source","description":"path of project source directory"}]},"deploy":{"id":"deploy","description":"Deploy a single image or a multicontainer project to a balena application.\n\nUsage: `deploy <appName> ([image] | --build [--source build-dir])`\n\nUse this command to deploy an image or a complete multicontainer project to an\napplication, optionally building it first. The source images are searched for\n(and optionally built) using the docker daemon in your development machine or\nbalena device. (See also the `balena push` command for the option of building\nthe image in the balenaCloud build servers.)\n\nUnless an image is specified, this command will look into the current directory\n(or the one specified by --source) for a docker-compose.yml file.  If one is\nfound, this command will deploy each service defined in the compose file,\nbuilding it first if an image for it doesn't exist. If a compose file isn't\nfound, the command will look for a Dockerfile[.template] file (or alternative\nDockerfile specified with the `-f` option), and if yet that isn't found, it\nwill try to generate one.\n\nTo deploy to an app on which you're a collaborator, use\n`balena deploy <appOwnerUsername>/<appName>`.\n\nREGISTRY SECRETS  \nThe --registry-secrets option specifies a JSON or YAML file containing private\nDocker registry usernames and passwords to be used when pulling base images.\nSample registry-secrets YAML file:\n```\n\t'my-registry-server.com:25000':\n\t\tusername: ann\n\t\tpassword: hunter2\n\t'':  # Use the empty string to refer to the Docker Hub\n\t\tusername: mike\n\t\tpassword: cze14\n\t'eu.gcr.io':  # Google Container Registry\n\t\tusername: '_json_key'\n\t\tpassword: '{escaped contents of the GCR keyfile.json file}'\n```\nFor a sample project using registry secrets with the Google Container Registry,\ncheck: https://github.com/balena-io-examples/sample-gcr-registry-secrets\n\nIf the --registry-secrets option is not specified, and a secrets.yml or\nsecrets.json file exists in the balena directory (usually $HOME/.balena),\nthis file will be used instead.\n\nDOCKERIGNORE AND GITIGNORE FILES  \nBy default, the balena CLI will use a single \".dockerignore\" file (if any) at\nthe project root (--source directory) in order to decide which source files to\nexclude from the \"build context\" (tar stream) sent to balenaCloud, Docker\ndaemon or balenaEngine. In a microservices (multicontainer) application, the\nsource directory is the directory that contains the \"docker-compose.yml\" file.\n\nThe --multi-dockerignore (-m) option may be used with microservices\n(multicontainer) applications that define a docker-compose.yml file. When\nthis option is used, each service subdirectory (defined by the `build` or\n`build.context` service properties in the docker-compose.yml file) is\nfiltered separately according to a .dockerignore file defined in the service\nsubdirectory. If no .dockerignore file exists in a service subdirectory, then\nonly the default .dockerignore patterns (see below) apply for that service\nsubdirectory.\n\nWhen the --multi-dockerignore (-m) option is used, the .dockerignore file (if\nany) defined at the overall project root will be used to filter files and\nsubdirectories other than service subdirectories. It will not have any effect\non service subdirectories, whether or not a service subdirectory defines its\nown .dockerignore file. Multiple .dockerignore files are not merged or added\ntogether, and cannot override or extend other files. This behavior maximizes\ncompatibility with the standard docker-compose tool, while still allowing a\nroot .dockerignore file (at the overall project root) to filter files and\nfolders that are outside service subdirectories.\n\nbalena CLI releases older than v12.0.0 also took .gitignore files into account.\nThis behavior is deprecated, but may still be enabled with the --gitignore (-g)\noption if compatibility is required. This option is mutually exclusive with\n--multi-dockerignore (-m) and will be removed in the CLI's next major version\nrelease (v13).\n\nDefault .dockerignore patterns  \nWhen --gitignore (-g) is NOT used (i.e. when not in v11 compatibility mode), a\nfew default/hardcoded dockerignore patterns are \"merged\" (in memory) with the\npatterns found in the applicable .dockerignore files, in the following order:\n```\n    **/.git\n    < user's patterns from the applicable '.dockerignore' file, if any >\n    !**/.balena\n    !**/.resin\n    !**/Dockerfile\n    !**/Dockerfile.*\n    !**/docker-compose.yml\n```\nThese patterns always apply, whether or not .dockerignore files exist in the\nproject. If necessary, the effect of the `**/.git` pattern may be modified by\nadding counter patterns to the applicable .dockerignore file(s), for example\n`!mysubmodule/.git`. For documentation on pattern format, see:\n- https://docs.docker.com/engine/reference/builder/#dockerignore-file\n- https://www.npmjs.com/package/@balena/dockerignore\n","usage":"deploy <appName> [image]","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena deploy myApp","$ balena deploy myApp --build --source myBuildDir/","$ balena deploy myApp myApp/myImage","$ balena deploy myApp myApp/myImage --release-tag key1 \"\" key2 \"value2 with spaces\""],"flags":{"source":{"name":"source","type":"option","char":"s","description":"specify an alternate source directory; default is the working directory"},"build":{"name":"build","type":"boolean","char":"b","description":"force a rebuild before deploy","allowNo":false},"nologupload":{"name":"nologupload","type":"boolean","description":"don't upload build logs to the dashboard with image (if building)","allowNo":false},"release-tag":{"name":"release-tag","type":"option","description":"Set release tags if the image deployment is successful. Multiple \narguments may be provided, alternating tag keys and values (see examples).\nHint: Empty values may be specified with \"\" (bash, cmd.exe) or '\"\"' (PowerShell)."},"emulated":{"name":"emulated","type":"boolean","char":"e","description":"Use QEMU for ARM architecture emulation during the image build","allowNo":false},"dockerfile":{"name":"dockerfile","type":"option","description":"Alternative Dockerfile name/path, relative to the source folder"},"logs":{"name":"logs","type":"boolean","description":"No-op and deprecated since balena CLI v12.0.0. Build logs are now shown by default.","allowNo":false},"nologs":{"name":"nologs","type":"boolean","description":"Hide the image build log output (produce less verbose output)","allowNo":false},"gitignore":{"name":"gitignore","type":"boolean","char":"g","description":"Consider .gitignore files in addition to the .dockerignore file. This reverts\nto the CLI v11 behavior/implementation (deprecated) if compatibility is required\nuntil your project can be adapted.","allowNo":false},"multi-dockerignore":{"name":"multi-dockerignore","type":"boolean","char":"m","description":"Have each service use its own .dockerignore file. See \"balena help build\".","allowNo":false},"nogitignore":{"name":"nogitignore","type":"boolean","char":"G","description":"No-op (default behavior) since balena CLI v12.0.0. See \"balena help build\".","allowNo":false},"noparent-check":{"name":"noparent-check","type":"boolean","description":"Disable project validation check of 'docker-compose.yml' file in parent folder","allowNo":false},"registry-secrets":{"name":"registry-secrets","type":"option","char":"R","description":"Path to a YAML or JSON file with passwords for a private Docker registry"},"convert-eol":{"name":"convert-eol","type":"boolean","char":"l","description":"No-op and deprecated since balena CLI v12.0.0","allowNo":false},"noconvert-eol":{"name":"noconvert-eol","type":"boolean","description":"Don't convert line endings from CRLF (Windows format) to LF (Unix format).","allowNo":false},"projectName":{"name":"projectName","type":"option","char":"n","description":"Specify an alternate project name; default is the directory name"},"tag":{"name":"tag","type":"option","char":"t","description":"The alias to the generated image"},"buildArg":{"name":"buildArg","type":"option","char":"B","description":"Set a build-time variable (eg. \"-B 'ARG=value'\"). Can be specified multiple times."},"cache-from":{"name":"cache-from","type":"option","description":"Comma-separated list (no spaces) of image names for build cache resolution. Implements the same feature as the \"docker build --cache-from\" option."},"nocache":{"name":"nocache","type":"boolean","description":"Don't use docker layer caching when building","allowNo":false},"pull":{"name":"pull","type":"boolean","description":"Pull the base images again even if they exist locally","allowNo":false},"squash":{"name":"squash","type":"boolean","description":"Squash newly built layers into a single new layer","allowNo":false},"docker":{"name":"docker","type":"option","char":"P","description":"Path to a local docker socket (e.g. /var/run/docker.sock)"},"dockerHost":{"name":"dockerHost","type":"option","char":"h","description":"Docker daemon hostname or IP address (dev machine or balena device) "},"dockerPort":{"name":"dockerPort","type":"option","char":"p","description":"Docker daemon TCP port number (hint: 2375 for balena devices)"},"ca":{"name":"ca","type":"option","description":"Docker host TLS certificate authority file"},"cert":{"name":"cert","type":"option","description":"Docker host TLS certificate file"},"key":{"name":"key","type":"option","description":"Docker host TLS key file"},"help":{"name":"help","type":"boolean","description":"show CLI help","allowNo":false}},"args":[{"name":"appName","description":"the name of the application to deploy to","required":true},{"name":"image","description":"the image to deploy"}]},"envs":{"id":"envs","description":"List the environment or config variables of an application, device or service.\n\nList the environment or configuration variables of an application, device or\nservice, as selected by the respective command-line options. (A service is\nan application container in a \"microservices\" application.)\n\nThe results include application-wide (fleet), device-wide (multiple services on\na device) and service-specific variables that apply to the selected application,\ndevice or service. It can be thought of as including \"inherited\" variables;\nfor example, a service inherits device-wide variables, and a device inherits\napplication-wide variables.\n\nThe printed output may include DEVICE and/or SERVICE columns to distinguish\nbetween application-wide, device-specific and service-specific variables.\nAn asterisk in these columns indicates that the variable applies to\n\"all devices\" or \"all services\".\n\nThe --config option is used to list \"configuration variables\" that control\nbalena platform features, as opposed to custom environment variables defined\nby the user. The --config and the --service options are mutually exclusive\nbecause configuration variables cannot be set for specific services.\n\nThe --json option is recommended when scripting the output of this command,\nbecause the JSON format is less likely to change and it better represents data\ntypes like lists and empty strings. The 'jq' utility may be helpful in shell\nscripts (https://stedolan.github.io/jq/manual/). When --json is used, an empty\nJSON array ([]) is printed instead of an error message when no variables exist\nfor the given query. When querying variables for a device, note that the\napplication name may be null in JSON output (or 'N/A' in tabular output) if the\napplication linked to the device is no longer accessible by the current user\n(for example, in case the current user has been removed from the application\nby its owner).\n\nApplications may be specified by app name, slug, or numeric ID. App slugs\nare the recommended option, as they are unique and unambiguous. Slugs\ncan be listed with the `balena apps` command. Note that slugs may change\nif the application is renamed.\nApp names are not unique and may result in \"Application is ambiguous\" errors\nat any time (even if it \"used to work in the past\"), for example if the name\nclashes with a newly created public application, or with apps from other balena\naccounts that you may have been invited to as a member. For this reason, app\nnames are especially discouraged in scripts (e.g. CI environments).\nNumeric app IDs are deprecated because they consist of an implementation detail\nof the balena backend. We intend to remove support for numeric IDs at some point\nin the future.","usage":"envs","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena envs --application MyApp","$ balena envs --application myorg/myapp","$ balena envs --application MyApp --json","$ balena envs --application MyApp --service MyService","$ balena envs --application MyApp --service MyService","$ balena envs --application MyApp --config","$ balena envs --device 7cf02a6","$ balena envs --device 7cf02a6 --json","$ balena envs --device 7cf02a6 --config --json","$ balena envs --device 7cf02a6 --service MyService"],"flags":{"all":{"name":"all","type":"boolean","description":"No-op since balena CLI v12.0.0.","hidden":true,"allowNo":false},"application":{"name":"application","type":"option","char":"a","description":"application name, slug (preferred), or numeric ID (deprecated)"},"config":{"name":"config","type":"boolean","char":"c","description":"show configuration variables only","allowNo":false},"device":{"name":"device","type":"option","char":"d","description":"device UUID"},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false},"json":{"name":"json","type":"boolean","char":"j","description":"produce JSON output instead of tabular output","allowNo":false},"verbose":{"name":"verbose","type":"boolean","char":"v","description":"produce verbose output","allowNo":false},"service":{"name":"service","type":"option","char":"s","description":"service name"}},"args":[]},"join":{"id":"join","description":"Move a local device to an application on another balena server.\n\nMove a local device to an application on another balena server, causing\nthe device to \"join\" the new server. The device must be running balenaOS.\n\nFor example, you could provision a device against an openBalena installation\nwhere you perform end-to-end tests and then move it to balenaCloud when it's\nready for production.\n\nTo move a device between applications on the same server, use the\n`balena device move` command instead of `balena join`.\n\nIf you don't specify a device hostname or IP, this command will automatically\nscan the local network for balenaOS devices and prompt you to select one\nfrom an interactive picker. This may require administrator/root privileges.\nLikewise, if the application flag is not provided then a picker will be shown.\n\nApplications may be specified by app name, slug, or numeric ID. App slugs\nare the recommended option, as they are unique and unambiguous. Slugs\ncan be listed with the `balena apps` command. Note that slugs may change\nif the application is renamed.\nApp names are not unique and may result in \"Application is ambiguous\" errors\nat any time (even if it \"used to work in the past\"), for example if the name\nclashes with a newly created public application, or with apps from other balena\naccounts that you may have been invited to as a member. For this reason, app\nnames are especially discouraged in scripts (e.g. CI environments).\nNumeric app IDs are deprecated because they consist of an implementation detail\nof the balena backend. We intend to remove support for numeric IDs at some point\nin the future.","usage":"join [deviceIpOrHostname]","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena join","$ balena join balena.local","$ balena join balena.local --application MyApp","$ balena join balena.local -a myorg/myapp","$ balena join 192.168.1.25","$ balena join 192.168.1.25 --application MyApp"],"flags":{"application":{"name":"application","type":"option","char":"a","description":"application name, slug (preferred), or numeric ID (deprecated)"},"pollInterval":{"name":"pollInterval","type":"option","char":"i","description":"the interval in minutes to check for updates"},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"deviceIpOrHostname","description":"the IP or hostname of device"}]},"keys":{"id":"keys","description":"List the SSH keys in balenaCloud.\n\nList all SSH keys registered in balenaCloud for the logged in user.","usage":"keys","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena keys"],"flags":{"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[]},"leave":{"id":"leave","description":"Remove a local device from its balena application.\n\nRemove a local device from its balena application, causing the device to\n\"leave\" the server it is provisioned on. This effectively makes the device\n\"unmanaged\". The device must be running balenaOS.\n\nThe device entry on the server is preserved after running this command,\nso the device can subsequently re-join the server if needed.\n\nIf you don't specify a device hostname or IP, this command will automatically\nscan the local network for balenaOS devices and prompt you to select one\nfrom an interactive picker. This may require administrator/root privileges.","usage":"leave [deviceIpOrHostname]","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena leave","$ balena leave balena.local","$ balena leave 192.168.1.25"],"flags":{"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"deviceIpOrHostname","description":"the device IP or hostname"}]},"login":{"id":"login","description":"Login to balena.\n\nLogin to your balena account.\n\nThis command will prompt you to login using the following login types:\n\n- Web authorization: open your web browser and prompt to authorize the CLI\nfrom the dashboard.\n\n- Credentials: using email/password and 2FA.\n\n- Token: using a session token or API key from the preferences page.","usage":"login","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena login","$ balena login --web","$ balena login --token \"...\"","$ balena login --credentials","$ balena login --credentials --email johndoe@gmail.com --password secret"],"flags":{"web":{"name":"web","type":"boolean","char":"w","description":"web-based login","allowNo":false},"token":{"name":"token","type":"boolean","char":"t","description":"session token or API key","allowNo":false},"credentials":{"name":"credentials","type":"boolean","char":"c","description":"credential-based login","allowNo":false},"email":{"name":"email","type":"option","char":"e","description":"email"},"user":{"name":"user","type":"option","char":"u","hidden":true},"password":{"name":"password","type":"option","char":"p","description":"password"},"port":{"name":"port","type":"option","char":"P","description":"TCP port number of local HTTP login server (--web auth only)"},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"token","hidden":true}]},"logout":{"id":"logout","description":"Logout from balena.\n\nLogout from your balena account.","usage":"logout","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena logout"],"flags":{},"args":[]},"logs":{"id":"logs","description":"Show device logs.\n\nShow logs for a specific device.\n\nBy default, the command prints all log messages and exits.\n\nTo continuously stream output, and see new logs in real time, use the `--tail` option.\n\nIf an IP or .local address is passed to this command, logs are displayed from\na local mode device with that address. Note that --tail is implied\nwhen this command is provided a local mode device.\n\nLogs from a single service can be displayed with the --service flag. Just system logs\ncan be shown with the --system flag. Note that these flags can be used together.\n\nNote: --service and --system flags must come after the device parameter, as per examples.","usage":"logs <device>","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena logs 23c73a1","$ balena logs 23c73a1 --tail","","$ balena logs 192.168.0.31","$ balena logs 192.168.0.31 --service my-service","$ balena logs 192.168.0.31 --service my-service-1 --service my-service-2","","$ balena logs 23c73a1.local --system","$ balena logs 23c73a1.local --system --service my-service"],"flags":{"max-retry":{"name":"max-retry","type":"option","description":"Maximum number of reconnection attempts on \"connection lost\" errors\n(use 0 to disable auto reconnection)."},"tail":{"name":"tail","type":"boolean","char":"t","description":"continuously stream output","allowNo":false},"service":{"name":"service","type":"option","char":"s","description":"Reject logs not originating from this service.\nThis can be used in combination with --system or other --service flags."},"system":{"name":"system","type":"boolean","char":"S","description":"Only show system logs. This can be used in combination with --service.","allowNo":false},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"device","description":"device UUID, IP, or .local address","required":true}]},"note":{"id":"note","description":"Set a device note.\n\nSet or update a device note. If the note argument is not provided,\nit will be read from stdin.\n\nTo view device notes, use the `balena device <uuid>` command.","usage":"note <|note>","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena note \"My useful note\" --device 7cf02a6","$ cat note.txt | balena note --device 7cf02a6"],"flags":{"device":{"name":"device","type":"option","char":"d","description":"device UUID"},"dev":{"name":"dev","type":"option","hidden":true},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"note","description":"note content"}]},"orgs":{"id":"orgs","description":"List all organizations.\n\nlist all the organizations that you are a member of.","usage":"orgs","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena orgs"],"flags":{"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[]},"preload":{"id":"preload","description":"Preload an app on a disk image (or Edison zip archive).\n\nPreload a balena application release (app images/containers), and optionally\na balenaOS splash screen, in a previously downloaded '.img' balenaOS image file\nin the local disk (a zip file is only accepted for the Intel Edison device type).\nAfter preloading, the balenaOS image file can be flashed to a device's SD card.\nWhen the device boots, it will not need to download the application, as it was\npreloaded.\n\nApplications may be specified by app name, slug, or numeric ID. App slugs\nare the recommended option, as they are unique and unambiguous. Slugs\ncan be listed with the `balena apps` command. Note that slugs may change\nif the application is renamed.\nApp names are not unique and may result in \"Application is ambiguous\" errors\nat any time (even if it \"used to work in the past\"), for example if the name\nclashes with a newly created public application, or with apps from other balena\naccounts that you may have been invited to as a member. For this reason, app\nnames are especially discouraged in scripts (e.g. CI environments).\nNumeric app IDs are deprecated because they consist of an implementation detail\nof the balena backend. We intend to remove support for numeric IDs at some point\nin the future.\n\nWarning: \"balena preload\" requires Docker to be correctly installed in\nyour shell environment. For more information (including Windows support)\ncheck: https://github.com/balena-io/balena-cli/blob/master/INSTALL.md","usage":"preload <image>","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena preload balena.img --app MyApp --commit e1f2592fc6ee949e68756d4f4a48e49bff8d72a0","$ balena preload balena.img --app myorg/myapp --commit e1f2592fc6ee949e68756d4f4a48e49bff8d72a0 --splash-image image.png","$ balena preload balena.img"],"flags":{"app":{"name":"app","type":"option","char":"a","description":"application name, slug (preferred), or numeric ID (deprecated)"},"commit":{"name":"commit","type":"option","char":"c","description":"The commit hash for a specific application release to preload, use \"current\" to specify the current\nrelease (ignored if no appId is given). The current release is usually also the latest, but can be\nmanually pinned using https://github.com/balena-io-projects/staged-releases ."},"splash-image":{"name":"splash-image","type":"option","char":"s","description":"path to a png image to replace the splash screen"},"dont-check-arch":{"name":"dont-check-arch","type":"boolean","description":"disables check for matching architecture in image and application","allowNo":false},"pin-device-to-release":{"name":"pin-device-to-release","type":"boolean","char":"p","description":"pin the preloaded device to the preloaded release on provision","allowNo":false},"additional-space":{"name":"additional-space","type":"option","description":"expand the image by this amount of bytes instead of automatically estimating the required amount"},"add-certificate":{"name":"add-certificate","type":"option","description":"Add the given certificate (in PEM format) to /etc/ssl/certs in the preloading container.\nThe file name must end with '.crt' and must not be already contained in the preloader's\n/etc/ssl/certs folder.\nCan be repeated to add multiple certificates."},"docker":{"name":"docker","type":"option","char":"P","description":"Path to a local docker socket (e.g. /var/run/docker.sock)"},"dockerHost":{"name":"dockerHost","type":"option","char":"h","description":"Docker daemon hostname or IP address (dev machine or balena device) "},"dockerPort":{"name":"dockerPort","type":"option","description":"Docker daemon TCP port number (hint: 2375 for balena devices)"},"ca":{"name":"ca","type":"option","description":"Docker host TLS certificate authority file"},"cert":{"name":"cert","type":"option","description":"Docker host TLS certificate file"},"key":{"name":"key","type":"option","description":"Docker host TLS key file"},"help":{"name":"help","type":"boolean","description":"show CLI help","allowNo":false}},"args":[{"name":"image","description":"the image file path","required":true}]},"push":{"id":"push","description":"Start a build on the remote balenaCloud build servers, or a local mode device.\n\nStart a build on the remote balenaCloud build servers, or a local mode device.\n\nWhen building on the balenaCloud servers, the given source directory will be\nsent to the remote server. This can be used as a drop-in replacement for the\n\"git push\" deployment method.\n\nWhen building on a local mode device, the given source directory will be\nbuilt on the device, and the resulting containers will be run on the device.\nLogs will be streamed back from the device as part of the same invocation.\nThe web dashboard can be used to switch a device to local mode:\nhttps://www.balena.io/docs/learn/develop/local-mode/\nNote that local mode requires a supervisor version of at least v7.21.0.\nThe logs from only a single service can be shown with the --service flag, and\nshowing only the system logs can be achieved with --system. Note that these\nflags can be used together.\n\nWhen pushing to a local device a live session will be started.\nThe project source folder is watched for filesystem events, and changes\nto files and folders are automatically synchronized to the running\ncontainers. The synchronization is only in one direction, from this machine to\nthe device, and changes made on the device itself may be overwritten.\nThis feature requires a device running supervisor version v9.7.0 or greater.\n\nREGISTRY SECRETS  \nThe --registry-secrets option specifies a JSON or YAML file containing private\nDocker registry usernames and passwords to be used when pulling base images.\nSample registry-secrets YAML file:\n```\n\t'my-registry-server.com:25000':\n\t\tusername: ann\n\t\tpassword: hunter2\n\t'':  # Use the empty string to refer to the Docker Hub\n\t\tusername: mike\n\t\tpassword: cze14\n\t'eu.gcr.io':  # Google Container Registry\n\t\tusername: '_json_key'\n\t\tpassword: '{escaped contents of the GCR keyfile.json file}'\n```\nFor a sample project using registry secrets with the Google Container Registry,\ncheck: https://github.com/balena-io-examples/sample-gcr-registry-secrets\n\nIf the --registry-secrets option is not specified, and a secrets.yml or\nsecrets.json file exists in the balena directory (usually $HOME/.balena),\nthis file will be used instead.\n\nDOCKERIGNORE AND GITIGNORE FILES  \nBy default, the balena CLI will use a single \".dockerignore\" file (if any) at\nthe project root (--source directory) in order to decide which source files to\nexclude from the \"build context\" (tar stream) sent to balenaCloud, Docker\ndaemon or balenaEngine. In a microservices (multicontainer) application, the\nsource directory is the directory that contains the \"docker-compose.yml\" file.\n\nThe --multi-dockerignore (-m) option may be used with microservices\n(multicontainer) applications that define a docker-compose.yml file. When\nthis option is used, each service subdirectory (defined by the `build` or\n`build.context` service properties in the docker-compose.yml file) is\nfiltered separately according to a .dockerignore file defined in the service\nsubdirectory. If no .dockerignore file exists in a service subdirectory, then\nonly the default .dockerignore patterns (see below) apply for that service\nsubdirectory.\n\nWhen the --multi-dockerignore (-m) option is used, the .dockerignore file (if\nany) defined at the overall project root will be used to filter files and\nsubdirectories other than service subdirectories. It will not have any effect\non service subdirectories, whether or not a service subdirectory defines its\nown .dockerignore file. Multiple .dockerignore files are not merged or added\ntogether, and cannot override or extend other files. This behavior maximizes\ncompatibility with the standard docker-compose tool, while still allowing a\nroot .dockerignore file (at the overall project root) to filter files and\nfolders that are outside service subdirectories.\n\nbalena CLI releases older than v12.0.0 also took .gitignore files into account.\nThis behavior is deprecated, but may still be enabled with the --gitignore (-g)\noption if compatibility is required. This option is mutually exclusive with\n--multi-dockerignore (-m) and will be removed in the CLI's next major version\nrelease (v13).\n\nDefault .dockerignore patterns  \nWhen --gitignore (-g) is NOT used (i.e. when not in v11 compatibility mode), a\nfew default/hardcoded dockerignore patterns are \"merged\" (in memory) with the\npatterns found in the applicable .dockerignore files, in the following order:\n```\n    **/.git\n    < user's patterns from the applicable '.dockerignore' file, if any >\n    !**/.balena\n    !**/.resin\n    !**/Dockerfile\n    !**/Dockerfile.*\n    !**/docker-compose.yml\n```\nThese patterns always apply, whether or not .dockerignore files exist in the\nproject. If necessary, the effect of the `**/.git` pattern may be modified by\nadding counter patterns to the applicable .dockerignore file(s), for example\n`!mysubmodule/.git`. For documentation on pattern format, see:\n- https://docs.docker.com/engine/reference/builder/#dockerignore-file\n- https://www.npmjs.com/package/@balena/dockerignore\n\nNote: the --service and --env flags must come after the applicationOrDevice\nparameter, as per examples.","usage":"push <applicationOrDevice>","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena push myApp","$ balena push myApp --source <source directory>","$ balena push myApp -s <source directory>","$ balena push myApp --release-tag key1 \"\" key2 \"value2 with spaces\"","$ balena push myorg/myapp","","$ balena push 10.0.0.1","$ balena push 10.0.0.1 --source <source directory>","$ balena push 10.0.0.1 --service my-service","$ balena push 10.0.0.1 --env MY_ENV_VAR=value --env my-service:SERVICE_VAR=value","$ balena push 10.0.0.1 --nolive","","$ balena push 23c73a1.local --system","$ balena push 23c73a1.local --system --service my-service"],"flags":{"source":{"name":"source","type":"option","char":"s","description":"Source directory to be sent to balenaCloud or balenaOS device\n(default: current working dir)","default":"."},"emulated":{"name":"emulated","type":"boolean","char":"e","description":"Don't use native ARM servers; force QEMU ARM emulation on Intel x86-64\nservers during the image build (balenaCloud).","allowNo":false},"dockerfile":{"name":"dockerfile","type":"option","description":"Alternative Dockerfile name/path, relative to the source folder"},"nocache":{"name":"nocache","type":"boolean","char":"c","description":"Don't use cached layers of previously built images for this project. This\nensures that the latest base image and packages are pulled. Note that build\nlogs may still display the message _\"Pulling previous images for caching\npurposes\" (as the cloud builder needs previous images to compute delta\nupdates), but the logs will not display the \"Using cache\" lines for each\nbuild step of a Dockerfile.","allowNo":false},"pull":{"name":"pull","type":"boolean","description":"When pushing to a local device, force the base images to be pulled again.\nCurrently this option is ignored when pushing to the balenaCloud builders.","allowNo":false},"noparent-check":{"name":"noparent-check","type":"boolean","description":"Disable project validation check of 'docker-compose.yml' file in parent folder","allowNo":false},"registry-secrets":{"name":"registry-secrets","type":"option","char":"R","description":"Path to a local YAML or JSON file containing Docker registry passwords used\nto pull base images. Note that if registry-secrets are not provided on the\ncommand line, a secrets configuration file from the balena directory will be\nused (usually $HOME/.balena/secrets.yml|.json)"},"nolive":{"name":"nolive","type":"boolean","description":"Don't run a live session on this push. The filesystem will not be monitored,\nand changes will not be synchronized to any running containers. Note that both\nthis flag and --detached and required to cause the process to end once the\ninitial build has completed.","allowNo":false},"detached":{"name":"detached","type":"boolean","char":"d","description":"When pushing to the cloud, this option will cause the build to start, then\nreturn execution back to the shell, with the status and release ID (if\napplicable).  When pushing to a local mode device, this option will cause\nthe command to not tail application logs when the build has completed.","allowNo":false},"service":{"name":"service","type":"option","description":"Reject logs not originating from this service.\nThis can be used in combination with --system and other --service flags.\nOnly valid when pushing to a local mode device."},"system":{"name":"system","type":"boolean","description":"Only show system logs. This can be used in combination with --service.\nOnly valid when pushing to a local mode device.","allowNo":false},"env":{"name":"env","type":"option","description":"When performing a push to device, run the built containers with environment\nvariables provided with this argument. Environment variables can be applied\nto individual services by adding their service name before the argument,\nseparated by a colon, e.g:\n\t--env main:MY_ENV=value\nNote that if the service name cannot be found in the composition, the entire\nleft hand side of the = character will be treated as the variable name."},"convert-eol":{"name":"convert-eol","type":"boolean","char":"l","description":"No-op and deprecated since balena CLI v12.0.0","hidden":true,"allowNo":false},"noconvert-eol":{"name":"noconvert-eol","type":"boolean","description":"Don't convert line endings from CRLF (Windows format) to LF (Unix format).","allowNo":false},"multi-dockerignore":{"name":"multi-dockerignore","type":"boolean","char":"m","description":"Have each service use its own .dockerignore file. See \"balena help push\".","allowNo":false},"nogitignore":{"name":"nogitignore","type":"boolean","char":"G","description":"No-op (default behavior) since balena CLI v12.0.0. See \"balena help push\".","hidden":true,"allowNo":false},"gitignore":{"name":"gitignore","type":"boolean","char":"g","description":"Consider .gitignore files in addition to the .dockerignore file. This reverts\nto the CLI v11 behavior/implementation (deprecated) if compatibility is\nrequired until your project can be adapted.","allowNo":false},"release-tag":{"name":"release-tag","type":"option","description":"Set release tags if the push to a cloud application is successful. Multiple\narguments may be provided, alternating tag keys and values (see examples).\nHint: Empty values may be specified with \"\" (bash, cmd.exe) or '\"\"' (PowerShell)."},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"applicationOrDevice","description":"application name or slug, or local device IP address or hostname","required":true}]},"scan":{"id":"scan","description":"Scan for balenaOS devices on your local network.\n\nScan for balenaOS devices on your local network.\n\nThe output includes device information collected through balenaEngine for\ndevices running a development image of balenaOS. Devices running a production\nimage do not expose balenaEngine (on TCP port 2375), which is why less\ninformation is printed about them.","usage":"scan","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena scan","$ balena scan --timeout 120","$ balena scan --verbose"],"flags":{"verbose":{"name":"verbose","type":"boolean","char":"v","description":"display full info","allowNo":false},"timeout":{"name":"timeout","type":"option","char":"t","description":"scan timeout in seconds"},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false},"json":{"name":"json","type":"boolean","char":"j","description":"produce JSON output instead of tabular output","allowNo":false}},"args":[]},"settings":{"id":"settings","description":"Print current settings.\n\nUse this command to display the current balena CLI settings.","usage":"settings","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena settings"],"flags":{"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[]},"ssh":{"id":"ssh","description":"SSH into the host or application container of a device.\n\nStart a shell on a local or remote device. If a service name is not provided,\na shell will be opened on the host OS.\n\nIf an application is provided, an interactive menu will be presented\nfor the selection of an online device. A shell will then be opened for the\nhost OS or service container of the chosen device.\n\nFor local devices, the IP address and .local domain name are supported.\nIf the device is referenced by IP or `.local` address, the connection\nis initiated directly to balenaOS on port `22222` via an\nopenssh-compatible client. Otherwise, any connection initiated remotely\ntraverses the balenaCloud VPN.\n\nCommands may be piped to the standard input for remote execution (see examples).\nNote however that remote command execution on service containers (as opposed to\nthe host OS) is not currently possible when a device UUID is used (instead of\nan IP address) because of a balenaCloud backend limitation.\n\nNote: `balena ssh` requires an openssh-compatible client to be correctly\ninstalled in your shell environment. For more information (including Windows\nsupport) please check:\n\thttps://github.com/balena-io/balena-cli/blob/master/INSTALL.md#additional-dependencies,","usage":"ssh <applicationOrDevice> [service]","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena ssh MyApp","$ balena ssh f49cefd","$ balena ssh f49cefd my-service","$ balena ssh f49cefd --port <port>","$ balena ssh 192.168.0.1 --verbose","$ balena ssh f49cefd.local my-service","$ echo \"uptime; exit;\" | balena ssh f49cefd","$ echo \"uptime; exit;\" | balena ssh 192.168.0.1 myService"],"flags":{"port":{"name":"port","type":"option","char":"p","description":"SSH server port number (default 22222) if the target is an IP address or .local\nhostname. Otherwise, port number for the balenaCloud gateway (default 22)."},"tty":{"name":"tty","type":"boolean","char":"t","description":"force pseudo-terminal allocation (bypass TTY autodetection for stdin)","allowNo":false},"verbose":{"name":"verbose","type":"boolean","char":"v","description":"increase verbosity","allowNo":false},"noproxy":{"name":"noproxy","type":"boolean","description":"bypass global proxy configuration for the ssh connection","allowNo":false},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"applicationOrDevice","description":"application name/slug/id, device uuid, or address of local device","required":true},{"name":"service","description":"service name, if connecting to a container","required":false}]},"support":{"id":"support","description":"Grant or revoke support access for devices and applications.\n\nGrant or revoke balena support agent access to devices and applications\non balenaCloud. (This command does not apply to openBalena.)\nAccess will be automatically revoked once the specified duration has elapsed.\n\nDuration defaults to 24h, but can be specified using --duration flag in days\nor hours, e.g. '12h', '2d'.\n\nBoth --device and --application flags accept multiple values, specified as\na comma-separated list (with no spaces).\n\nApplications may be specified by app name, slug, or numeric ID. App slugs\nare the recommended option, as they are unique and unambiguous. Slugs\ncan be listed with the `balena apps` command. Note that slugs may change\nif the application is renamed.\nApp names are not unique and may result in \"Application is ambiguous\" errors\nat any time (even if it \"used to work in the past\"), for example if the name\nclashes with a newly created public application, or with apps from other balena\naccounts that you may have been invited to as a member. For this reason, app\nnames are especially discouraged in scripts (e.g. CI environments).\nNumeric app IDs are deprecated because they consist of an implementation detail\nof the balena backend. We intend to remove support for numeric IDs at some point\nin the future.","usage":"support <action>","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["balena support enable --device ab346f,cd457a --duration 3d","balena support enable --application app3 --duration 12h","balena support disable -a myorg/myapp"],"flags":{"device":{"name":"device","type":"option","char":"d","description":"comma-separated list (no spaces) of device UUIDs"},"application":{"name":"application","type":"option","char":"a","description":"comma-separated list (no spaces) of application names or org/name slugs"},"duration":{"name":"duration","type":"option","char":"t","description":"length of time to enable support for, in (h)ours or (d)ays, e.g. 12h, 2d"},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"action","description":"enable|disable support access","options":["enable","disable"]}]},"tags":{"id":"tags","description":"List all tags for an application, device or release.\n\nList all tags and their values for a particular application,\ndevice or release.\n\nApplications may be specified by app name, slug, or numeric ID. App slugs\nare the recommended option, as they are unique and unambiguous. Slugs\ncan be listed with the `balena apps` command. Note that slugs may change\nif the application is renamed.\nApp names are not unique and may result in \"Application is ambiguous\" errors\nat any time (even if it \"used to work in the past\"), for example if the name\nclashes with a newly created public application, or with apps from other balena\naccounts that you may have been invited to as a member. For this reason, app\nnames are especially discouraged in scripts (e.g. CI environments).\nNumeric app IDs are deprecated because they consist of an implementation detail\nof the balena backend. We intend to remove support for numeric IDs at some point\nin the future.","usage":"tags","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena tags --application MyApp","$ balena tags -a myorg/myapp","$ balena tags --device 7cf02a6","$ balena tags --release 1234","$ balena tags --release b376b0e544e9429483b656490e5b9443b4349bd6"],"flags":{"application":{"name":"application","type":"option","char":"a","description":"application name, slug (preferred), or numeric ID (deprecated)"},"app":{"name":"app","type":"option","description":"same as '--application'"},"device":{"name":"device","type":"option","char":"d","description":"device UUID"},"release":{"name":"release","type":"option","char":"r","description":"release id"},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[]},"tunnel":{"id":"tunnel","description":"Tunnel local ports to your balenaOS device.\n\nUse this command to open local TCP ports that tunnel to listening sockets in a\nbalenaOS device.\n\nFor example, this command could be used to expose the ssh server of a balenaOS\ndevice (port number 22222) on the local machine, or to expose a web server\nrunning on the device. The port numbers do not have be the same between the\ndevice and the local machine, and multiple ports may be tunneled in a single\ncommand line.\n\nPort mappings are specified in the format: <remotePort>[:[localIP:]localPort]\nlocalIP defaults to 'localhost', and localPort defaults to the specified\nremotePort value.\n\nNote: the -p (--port) flag must be provided at the end of the command line,\nas per examples.\n\nIn the case of openBalena, the tunnel command in CLI v12.38.5 or later requires\nopenBalena v3.1.2 or later. Older CLI versions work with older openBalena\nversions.","usage":"tunnel <deviceOrApplication>","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["# map remote port 22222 to localhost:22222","$ balena tunnel myApp -p 22222","","# map remote port 22222 to localhost:222","$ balena tunnel 2ead211 -p 22222:222","","# map remote port 22222 to any address on your host machine, port 22222","$ balena tunnel 1546690 -p 22222:0.0.0.0","","# map remote port 22222 to any address on your host machine, port 222","$ balena tunnel myApp -p 22222:0.0.0.0:222","","# multiple port tunnels can be specified at any one time","$ balena tunnel myApp -p 8080:3000 -p 8081:9000"],"flags":{"port":{"name":"port","type":"option","char":"p","description":"port mapping in the format <remotePort>[:[localIP:]localPort]"},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"deviceOrApplication","description":"device uuid or application name/slug/id","required":true}]},"version":{"id":"version","description":"Display version information for the balena CLI and/or Node.js.\n\nDisplay version information for the balena CLI and/or Node.js. Note that the\nbalena CLI executable installers for Windows and macOS, and the standalone\nzip packages, ship with a built-in copy of Node.js.  In this case, the\nreported version of Node.js regards this built-in copy, rather than any\nother `node` engine that may also be available on the command prompt.\n\nThe --json option is recommended when scripting the output of this command,\nbecause the JSON format is less likely to change and it better represents\ndata types like lists and empty strings. The 'jq' utility may be helpful\nin shell scripts (https://stedolan.github.io/jq/manual/).\n\nThis command can also be invoked with 'balena --version' or 'balena -v'.","usage":"version","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena version","$ balena version -a","$ balena version -j","$ balena --version","$ balena -v"],"flags":{"all":{"name":"all","type":"boolean","char":"a","description":"include version information for additional components (Node.js)","allowNo":false},"json":{"name":"json","type":"boolean","char":"j","description":"output version information in JSON format for programmatic use","allowNo":false},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[]},"whoami":{"id":"whoami","description":"Display account information for current user.\n\nGet the username and email address of the currently logged in user.","usage":"whoami","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena whoami"],"flags":{},"args":[]},"api-key:generate":{"id":"api-key:generate","description":"Generate a new balenaCloud API key.\n\nGenerate a new balenaCloud API key for the current user, with the given\nname. The key will be logged to the console.\n\nThis key can be used to log into the CLI using 'balena login --token <key>',\nor to authenticate requests to the API with an 'Authorization: Bearer <key>' header.","usage":"api-key generate <name>","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena api-key generate \"Jenkins Key\""],"flags":{"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"name","description":"the API key name","required":true}]},"app:create":{"id":"app:create","description":"Create an application.\n\nCreate a new balena application.\n\nYou can specify the organization the application should belong to using\nthe `--organization` option. The organization's handle, not its name,\nshould be provided. Organization handles can be listed with the\n`balena orgs` command.\n\nThe application's default device type is specified with the `--type` option.\nThe `balena devices supported` command can be used to list the available\ndevice types.\n\nInteractive dropdowns will be shown for selection if no device type or\norganization is specified and there are multiple options to choose from.\nIf there is a single option to choose from, it will be chosen automatically.\nThis interactive behavior can be disabled by explicitly specifying a device\ntype and organization.","usage":"app create <name>","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena app create MyApp","$ balena app create MyApp --organization mmyorg","$ balena app create MyApp -o myorg --type raspberry-pi"],"flags":{"organization":{"name":"organization","type":"option","char":"o","description":"handle of the organization the application should belong to"},"type":{"name":"type","type":"option","char":"t","description":"application device type (Check available types with `balena devices supported`)"},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"name","description":"application name","required":true}]},"app":{"id":"app","description":"Display information about a single application.\n\nDisplay detailed information about a single balena application.\n\nApplications may be specified by app name, slug, or numeric ID. App slugs\nare the recommended option, as they are unique and unambiguous. Slugs\ncan be listed with the `balena apps` command. Note that slugs may change\nif the application is renamed.\nApp names are not unique and may result in \"Application is ambiguous\" errors\nat any time (even if it \"used to work in the past\"), for example if the name\nclashes with a newly created public application, or with apps from other balena\naccounts that you may have been invited to as a member. For this reason, app\nnames are especially discouraged in scripts (e.g. CI environments).\nNumeric app IDs are deprecated because they consist of an implementation detail\nof the balena backend. We intend to remove support for numeric IDs at some point\nin the future.","usage":"app <nameOrSlug>","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena app MyApp","$ balena app myorg/myapp"],"flags":{"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"application","description":"application name, slug (preferred), or numeric ID (deprecated)","required":true}]},"app:purge":{"id":"app:purge","description":"Purge data from an application.\n\nPurge data from all devices belonging to an application.\nThis will clear the application's /data directory.\n\nApplications may be specified by app name, slug, or numeric ID. App slugs\nare the recommended option, as they are unique and unambiguous. Slugs\ncan be listed with the `balena apps` command. Note that slugs may change\nif the application is renamed.\nApp names are not unique and may result in \"Application is ambiguous\" errors\nat any time (even if it \"used to work in the past\"), for example if the name\nclashes with a newly created public application, or with apps from other balena\naccounts that you may have been invited to as a member. For this reason, app\nnames are especially discouraged in scripts (e.g. CI environments).\nNumeric app IDs are deprecated because they consist of an implementation detail\nof the balena backend. We intend to remove support for numeric IDs at some point\nin the future.","usage":"app purge <application>","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena app purge MyApp","$ balena app purge myorg/myapp"],"flags":{"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"application","description":"application name, slug (preferred), or numeric ID (deprecated)","required":true}]},"app:rename":{"id":"app:rename","description":"Rename an application.\n\nRename an application.\n\nNote, if the `newName` parameter is omitted, it will be\nprompted for interactively.\n\nApplications may be specified by app name, slug, or numeric ID. App slugs\nare the recommended option, as they are unique and unambiguous. Slugs\ncan be listed with the `balena apps` command. Note that slugs may change\nif the application is renamed.\nApp names are not unique and may result in \"Application is ambiguous\" errors\nat any time (even if it \"used to work in the past\"), for example if the name\nclashes with a newly created public application, or with apps from other balena\naccounts that you may have been invited to as a member. For this reason, app\nnames are especially discouraged in scripts (e.g. CI environments).\nNumeric app IDs are deprecated because they consist of an implementation detail\nof the balena backend. We intend to remove support for numeric IDs at some point\nin the future.","usage":"app rename <application> [newName]","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena app rename OldName","$ balena app rename OldName NewName","$ balena app rename myorg/oldname NewName"],"flags":{"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"application","description":"application name, slug (preferred), or numeric ID (deprecated)","required":true},{"name":"newName","description":"the new name for the application"}]},"app:restart":{"id":"app:restart","description":"Restart an application.\n\nRestart all devices belonging to an application.\n\nApplications may be specified by app name, slug, or numeric ID. App slugs\nare the recommended option, as they are unique and unambiguous. Slugs\ncan be listed with the `balena apps` command. Note that slugs may change\nif the application is renamed.\nApp names are not unique and may result in \"Application is ambiguous\" errors\nat any time (even if it \"used to work in the past\"), for example if the name\nclashes with a newly created public application, or with apps from other balena\naccounts that you may have been invited to as a member. For this reason, app\nnames are especially discouraged in scripts (e.g. CI environments).\nNumeric app IDs are deprecated because they consist of an implementation detail\nof the balena backend. We intend to remove support for numeric IDs at some point\nin the future.","usage":"app restart <application>","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena app restart MyApp","$ balena app restart myorg/myapp"],"flags":{"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"application","description":"application name, slug (preferred), or numeric ID (deprecated)","required":true}]},"app:rm":{"id":"app:rm","description":"Remove an application.\n\nPermanently remove a balena application.\n\nThe --yes option may be used to avoid interactive confirmation.\n\nApplications may be specified by app name, slug, or numeric ID. App slugs\nare the recommended option, as they are unique and unambiguous. Slugs\ncan be listed with the `balena apps` command. Note that slugs may change\nif the application is renamed.\nApp names are not unique and may result in \"Application is ambiguous\" errors\nat any time (even if it \"used to work in the past\"), for example if the name\nclashes with a newly created public application, or with apps from other balena\naccounts that you may have been invited to as a member. For this reason, app\nnames are especially discouraged in scripts (e.g. CI environments).\nNumeric app IDs are deprecated because they consist of an implementation detail\nof the balena backend. We intend to remove support for numeric IDs at some point\nin the future.","usage":"app rm <application>","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena app rm MyApp","$ balena app rm MyApp --yes","$ balena app rm myorg/myapp"],"flags":{"yes":{"name":"yes","type":"boolean","char":"y","description":"answer \"yes\" to all questions (non interactive use)","allowNo":false},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"application","description":"application name, slug (preferred), or numeric ID (deprecated)","required":true}]},"config:generate":{"id":"config:generate","description":"Generate a config.json file.\n\nGenerate a config.json file for a device or application.\n\nCalling this command with the exact version number of the targeted image is required.\n\nThis command is interactive by default, but you can do this automatically without interactivity\nby specifying an option for each question on the command line, if you know the questions\nthat will be asked for the relevant device type.\n\nIn case that you want to configure an image for an application with mixed device types,\nyou can pass the --deviceType argument along with --application to specify the target device type.\n\nApplications may be specified by app name, slug, or numeric ID. App slugs\nare the recommended option, as they are unique and unambiguous. Slugs\ncan be listed with the `balena apps` command. Note that slugs may change\nif the application is renamed.\nApp names are not unique and may result in \"Application is ambiguous\" errors\nat any time (even if it \"used to work in the past\"), for example if the name\nclashes with a newly created public application, or with apps from other balena\naccounts that you may have been invited to as a member. For this reason, app\nnames are especially discouraged in scripts (e.g. CI environments).\nNumeric app IDs are deprecated because they consist of an implementation detail\nof the balena backend. We intend to remove support for numeric IDs at some point\nin the future.","usage":"config generate","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena config generate --device 7cf02a6 --version 2.12.7","$ balena config generate --device 7cf02a6 --version 2.12.7 --generate-device-api-key","$ balena config generate --device 7cf02a6 --version 2.12.7 --device-api-key <existingDeviceKey>","$ balena config generate --device 7cf02a6 --version 2.12.7 --output config.json","$ balena config generate --app MyApp --version 2.12.7","$ balena config generate --app myorg/myapp --version 2.12.7","$ balena config generate --app MyApp --version 2.12.7 --deviceType fincm3","$ balena config generate --app MyApp --version 2.12.7 --output config.json","$ balena config generate --app MyApp --version 2.12.7 --network wifi --wifiSsid mySsid --wifiKey abcdefgh --appUpdatePollInterval 1"],"flags":{"version":{"name":"version","type":"option","description":"a balenaOS version","required":true},"application":{"name":"application","type":"option","char":"a","description":"application name, slug (preferred), or numeric ID (deprecated)"},"app":{"name":"app","type":"option","description":"same as '--application'"},"device":{"name":"device","type":"option","char":"d","description":"device uuid"},"deviceApiKey":{"name":"deviceApiKey","type":"option","char":"k","description":"custom device key - note that this is only supported on balenaOS 2.0.3+"},"deviceType":{"name":"deviceType","type":"option","description":"device type slug"},"generate-device-api-key":{"name":"generate-device-api-key","type":"boolean","description":"generate a fresh device key for the device","allowNo":false},"output":{"name":"output","type":"option","char":"o","description":"path of output file"},"network":{"name":"network","type":"option","description":"the network type to use: ethernet or wifi","options":["ethernet","wifi"]},"wifiSsid":{"name":"wifiSsid","type":"option","description":"the wifi ssid to use (used only if --network is set to wifi)"},"wifiKey":{"name":"wifiKey","type":"option","description":"the wifi key to use (used only if --network is set to wifi)"},"appUpdatePollInterval":{"name":"appUpdatePollInterval","type":"option","description":"how frequently (in minutes) to poll for application updates"},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[]},"config:inject":{"id":"config:inject","description":"Inject a configuration file into a device or OS image.\n\nInject a config.json file to the mounted filesystem,\ne.g. the SD card of a provisioned device or balenaOS image.","usage":"config inject <file>","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena config inject my/config.json --type raspberrypi3","$ balena config inject my/config.json --type raspberrypi3 --drive /dev/disk2"],"flags":{"type":{"name":"type","type":"option","char":"t","description":"device type (Check available types with `balena devices supported`)","required":true},"drive":{"name":"drive","type":"option","char":"d","description":"device filesystem or OS image location"},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"file","description":"the path to the config.json file to inject","required":true}]},"config:read":{"id":"config:read","description":"Read the configuration of a device or OS image.\n\nRead the config.json file from the mounted filesystem,\ne.g. the SD card of a provisioned device or balenaOS image.","usage":"config read","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena config read --type raspberrypi3","$ balena config read --type raspberrypi3 --drive /dev/disk2"],"flags":{"type":{"name":"type","type":"option","char":"t","description":"device type (Check available types with `balena devices supported`)","required":true},"drive":{"name":"drive","type":"option","char":"d","description":"device filesystem or OS image location"},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[]},"config:reconfigure":{"id":"config:reconfigure","description":"Interactively reconfigure a device or OS image.\n\nInteractively reconfigure a provisioned device or OS image.","usage":"config reconfigure","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena config reconfigure --type raspberrypi3","$ balena config reconfigure --type raspberrypi3 --advanced","$ balena config reconfigure --type raspberrypi3 --drive /dev/disk2"],"flags":{"type":{"name":"type","type":"option","char":"t","description":"device type (Check available types with `balena devices supported`)","required":true},"drive":{"name":"drive","type":"option","char":"d","description":"device filesystem or OS image location"},"advanced":{"name":"advanced","type":"boolean","char":"v","description":"show advanced commands","allowNo":false},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[]},"config:write":{"id":"config:write","description":"Write a key-value pair to configuration of a device or OS image.\n\nWrite a key-value pair to the config.json file on the mounted filesystem,\ne.g. the SD card of a provisioned device or balenaOS image.","usage":"config write <key> <value>","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena config write --type raspberrypi3 username johndoe","$ balena config write --type raspberrypi3 --drive /dev/disk2 username johndoe","$ balena config write --type raspberrypi3 files.network/settings \"...\""],"flags":{"type":{"name":"type","type":"option","char":"t","description":"device type (Check available types with `balena devices supported`)","required":true},"drive":{"name":"drive","type":"option","char":"d","description":"device filesystem or OS image location"},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"key","description":"the key of the config parameter to write","required":true},{"name":"value","description":"the value of the config parameter to write","required":true}]},"device:deactivate":{"id":"device:deactivate","description":"Deactivate a device.\n\nDeactivate a device.\n\nNote this command asks for confirmation interactively.\nYou can avoid this by passing the `--yes` option.","usage":"device deactivate <uuid>","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena device deactivate 7cf02a6","$ balena device deactivate 7cf02a6 --yes"],"flags":{"yes":{"name":"yes","type":"boolean","char":"y","description":"answer \"yes\" to all questions (non interactive use)","allowNo":false},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"uuid","description":"the UUID of the device to be deactivated","required":true}]},"device:identify":{"id":"device:identify","description":"Identify a device.\n\nIdentify a device by making the ACT LED blink (Raspberry Pi).","usage":"device identify <uuid>","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena device identify 23c73a1"],"flags":{"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"uuid","description":"the uuid of the device to identify","required":true}]},"device":{"id":"device","description":"Show info about a single device.\n\nShow information about a single device.","usage":"device <uuid>","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena device 7cf02a6"],"flags":{"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"uuid","description":"the device uuid","required":true}]},"device:init":{"id":"device:init","description":"Initialize a device with balenaOS.\n\nInitialize a device by downloading the OS image of a certain application\nand writing it to an SD Card.\n\nNote, if the application option is omitted it will be prompted\nfor interactively.\n\nApplications may be specified by app name, slug, or numeric ID. App slugs\nare the recommended option, as they are unique and unambiguous. Slugs\ncan be listed with the `balena apps` command. Note that slugs may change\nif the application is renamed.\nApp names are not unique and may result in \"Application is ambiguous\" errors\nat any time (even if it \"used to work in the past\"), for example if the name\nclashes with a newly created public application, or with apps from other balena\naccounts that you may have been invited to as a member. For this reason, app\nnames are especially discouraged in scripts (e.g. CI environments).\nNumeric app IDs are deprecated because they consist of an implementation detail\nof the balena backend. We intend to remove support for numeric IDs at some point\nin the future.","usage":"device init","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena device init","$ balena device init --application MyApp","$ balena device init -a myorg/myapp"],"flags":{"application":{"name":"application","type":"option","char":"a","description":"application name, slug (preferred), or numeric ID (deprecated)"},"app":{"name":"app","type":"option","description":"same as '--application'"},"yes":{"name":"yes","type":"boolean","char":"y","description":"answer \"yes\" to all questions (non interactive use)","allowNo":false},"advanced":{"name":"advanced","type":"boolean","char":"v","description":"show advanced configuration options","allowNo":false},"os-version":{"name":"os-version","type":"option","description":"exact version number, or a valid semver range,\nor 'latest' (includes pre-releases),\nor 'default' (excludes pre-releases if at least one stable version is available),\nor 'recommended' (excludes pre-releases, will fail if only pre-release versions are available),\nor 'menu' (will show the interactive menu)"},"drive":{"name":"drive","type":"option","char":"d","description":"the drive to write the image to, eg. `/dev/sdb` or `/dev/mmcblk0`.\nCareful with this as you can erase your hard drive.\nCheck `balena util available-drives` for available options."},"config":{"name":"config","type":"option","description":"path to the config JSON file, see `balena os build-config`"},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[]},"device:move":{"id":"device:move","description":"Move one or more devices to another application.\n\nMove one or more devices to another application.\n\nNote, if the application option is omitted it will be prompted\nfor interactively.\n\nApplications may be specified by app name, slug, or numeric ID. App slugs\nare the recommended option, as they are unique and unambiguous. Slugs\ncan be listed with the `balena apps` command. Note that slugs may change\nif the application is renamed.\nApp names are not unique and may result in \"Application is ambiguous\" errors\nat any time (even if it \"used to work in the past\"), for example if the name\nclashes with a newly created public application, or with apps from other balena\naccounts that you may have been invited to as a member. For this reason, app\nnames are especially discouraged in scripts (e.g. CI environments).\nNumeric app IDs are deprecated because they consist of an implementation detail\nof the balena backend. We intend to remove support for numeric IDs at some point\nin the future.","usage":"device move <uuid(s)>","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena device move 7cf02a6","$ balena device move 7cf02a6,dc39e52","$ balena device move 7cf02a6 --application MyNewApp","$ balena device move 7cf02a6 -a myorg/mynewapp"],"flags":{"application":{"name":"application","type":"option","char":"a","description":"application name, slug (preferred), or numeric ID (deprecated)"},"app":{"name":"app","type":"option","description":"same as '--application'"},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"uuid","description":"comma-separated list (no blank spaces) of device UUIDs to be moved","required":true}]},"device:os-update":{"id":"device:os-update","description":"Start a Host OS update for a device.\n\nStart a Host OS update for a device.\n\nNote this command will ask for confirmation interactively.\nThis can be avoided by passing the `--yes` option.\n\nRequires balenaCloud; will not work with openBalena or standalone balenaOS.","usage":"device os-update <uuid>","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena device os-update 23c73a1","$ balena device os-update 23c73a1 --version 2.31.0+rev1.prod"],"flags":{"version":{"name":"version","type":"option","description":"a balenaOS version"},"yes":{"name":"yes","type":"boolean","char":"y","description":"answer \"yes\" to all questions (non interactive use)","allowNo":false},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"uuid","description":"the uuid of the device to update","required":true}]},"device:public-url":{"id":"device:public-url","description":"Get or manage the public URL for a device.\n\nThis command will output the current public URL for the\nspecified device.  It can also enable or disable the URL,\nor output the enabled status, using the respective options.\n\nThe old command style 'balena device public-url enable <uuid>'\nis deprecated, but still supported.","usage":"device public-url <uuid>","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena device public-url 23c73a1","$ balena device public-url 23c73a1 --enable","$ balena device public-url 23c73a1 --disable","$ balena device public-url 23c73a1 --status"],"flags":{"enable":{"name":"enable","type":"boolean","description":"enable the public URL","allowNo":false},"disable":{"name":"disable","type":"boolean","description":"disable the public URL","allowNo":false},"status":{"name":"status","type":"boolean","description":"determine if public URL is enabled","allowNo":false},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"uuid","description":"the uuid of the device to manage","required":true},{"name":"legacyUuid","hidden":true}]},"device:purge":{"id":"device:purge","description":"Purge application data from a device.\n\nPurge application data from a device.\nThis will clear the application's /data directory.\n\nMultiple devices may be specified with a comma-separated list\nof values (no spaces).","usage":"device purge <uuid>","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena device purge 23c73a1","$ balena device purge 55d43b3,23c73a1"],"flags":{"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"uuid","description":"comma-separated list (no blank spaces) of device UUIDs","required":true}]},"device:reboot":{"id":"device:reboot","description":"Restart a device.\n\nRemotely reboot a device.","usage":"device reboot <uuid>","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena device reboot 23c73a1"],"flags":{"force":{"name":"force","type":"boolean","char":"f","description":"force action if the update lock is set","allowNo":false},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"uuid","description":"the uuid of the device to reboot","required":true}]},"device:register":{"id":"device:register","description":"Register a device.\n\nRegister a device to an application.\n\nApplications may be specified by app name, slug, or numeric ID. App slugs\nare the recommended option, as they are unique and unambiguous. Slugs\ncan be listed with the `balena apps` command. Note that slugs may change\nif the application is renamed.\nApp names are not unique and may result in \"Application is ambiguous\" errors\nat any time (even if it \"used to work in the past\"), for example if the name\nclashes with a newly created public application, or with apps from other balena\naccounts that you may have been invited to as a member. For this reason, app\nnames are especially discouraged in scripts (e.g. CI environments).\nNumeric app IDs are deprecated because they consist of an implementation detail\nof the balena backend. We intend to remove support for numeric IDs at some point\nin the future.","usage":"device register <application>","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena device register MyApp","$ balena device register MyApp --uuid <uuid>","$ balena device register myorg/myapp --uuid <uuid>"],"flags":{"uuid":{"name":"uuid","type":"option","char":"u","description":"custom uuid"},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"application","description":"application name, slug (preferred), or numeric ID (deprecated)","required":true}]},"device:rename":{"id":"device:rename","description":"Rename a device.\n\nRename a device.\n\nNote, if the name is omitted, it will be prompted for interactively.","usage":"device rename <uuid> [newName]","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena device rename 7cf02a6","$ balena device rename 7cf02a6 MyPi"],"flags":{"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"uuid","description":"the uuid of the device to rename","required":true},{"name":"newName","description":"the new name for the device"}]},"device:restart":{"id":"device:restart","description":"Restart containers on a device.\n\nRestart containers on a device.\nIf the --service flag is provided, then only those services' containers\nwill be restarted, otherwise all containers on the device will be restarted.\n\nMultiple devices and services may be specified with a comma-separated list\nof values (no spaces).\n\nNote this does not reboot the device, to do so use instead `balena device reboot`.","usage":"device restart <uuid>","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena device restart 23c73a1","$ balena device restart 55d43b3,23c73a1","$ balena device restart 23c73a1 --service myService","$ balena device restart 23c73a1 -s myService1,myService2"],"flags":{"service":{"name":"service","type":"option","char":"s","description":"comma-separated list (no blank spaces) of service names to restart"},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"uuid","description":"comma-separated list (no blank spaces) of device UUIDs to restart","required":true}]},"device:rm":{"id":"device:rm","description":"Remove one or more devices.\n\nRemove one or more devices from balena.\n\nNote this command asks for confirmation interactively.\nYou can avoid this by passing the `--yes` option.","usage":"device rm <uuid(s)>","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena device rm 7cf02a6","$ balena device rm 7cf02a6,dc39e52","$ balena device rm 7cf02a6 --yes"],"flags":{"yes":{"name":"yes","type":"boolean","char":"y","description":"answer \"yes\" to all questions (non interactive use)","allowNo":false},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"uuid","description":"comma-separated list (no blank spaces) of device UUIDs to be removed","required":true}]},"device:shutdown":{"id":"device:shutdown","description":"Shutdown a device.\n\nRemotely shutdown a device.","usage":"device shutdown <uuid>","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena device shutdown 23c73a1"],"flags":{"force":{"name":"force","type":"boolean","char":"f","description":"force action if the update lock is set","allowNo":false},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"uuid","description":"the uuid of the device to shutdown","required":true}]},"devices":{"id":"devices","description":"List all devices.\n\nlist all devices that belong to you.\n\nYou can filter the devices by application by using the `--application` option.\n\nApplications may be specified by app name, slug, or numeric ID. App slugs\nare the recommended option, as they are unique and unambiguous. Slugs\ncan be listed with the `balena apps` command. Note that slugs may change\nif the application is renamed.\nApp names are not unique and may result in \"Application is ambiguous\" errors\nat any time (even if it \"used to work in the past\"), for example if the name\nclashes with a newly created public application, or with apps from other balena\naccounts that you may have been invited to as a member. For this reason, app\nnames are especially discouraged in scripts (e.g. CI environments).\nNumeric app IDs are deprecated because they consist of an implementation detail\nof the balena backend. We intend to remove support for numeric IDs at some point\nin the future.\n\nThe --json option is recommended when scripting the output of this command,\nbecause field names are less likely to change in JSON format and because it\nbetter represents data types like arrays, empty strings and null values.\nThe 'jq' utility may be helpful for querying JSON fields in shell scripts\n(https://stedolan.github.io/jq/manual/).","usage":"devices","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena devices","$ balena devices --application MyApp","$ balena devices --app MyApp","$ balena devices -a MyApp","$ balena devices -a myorg/myapp"],"flags":{"application":{"name":"application","type":"option","char":"a","description":"application name, slug (preferred), or numeric ID (deprecated)"},"app":{"name":"app","type":"option","description":"same as '--application'"},"json":{"name":"json","type":"boolean","char":"j","description":"produce JSON output instead of tabular output","allowNo":false},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[]},"devices:supported":{"id":"devices:supported","description":"List the supported device types (like 'raspberrypi3' or 'intel-nuc').\n\nList the supported device types (like 'raspberrypi3' or 'intel-nuc').\n\nThe --verbose option adds extra columns/fields to the output, including the\n\"STATE\" column whose values are one of 'new', 'released' or 'discontinued'.\nHowever, 'discontinued' device types are only listed if the '--discontinued'\noption is used.\n\nThe --json option is recommended when scripting the output of this command,\nbecause the JSON format is less likely to change and it better represents data\ntypes like lists and empty strings (for example, the ALIASES column contains a\nlist of zero or more values). The 'jq' utility may be helpful in shell scripts\n(https://stedolan.github.io/jq/manual/).","usage":"devices supported","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena devices supported","$ balena devices supported --verbose","$ balena devices supported -vj"],"flags":{"discontinued":{"name":"discontinued","type":"boolean","description":"include \"discontinued\" device types","allowNo":false},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false},"json":{"name":"json","type":"boolean","char":"j","description":"produce JSON output instead of tabular output","allowNo":false},"verbose":{"name":"verbose","type":"boolean","char":"v","description":"add extra columns in the tabular output (ALIASES, ARCH, STATE)","allowNo":false}},"args":[]},"env:add":{"id":"env:add","description":"Add env or config variable to application(s), device(s) or service(s).\n\nAdd an environment or config variable to one or more applications, devices\nor services, as selected by the respective command-line options. Either the\n--application or the --device option must be provided, and either may be be\nused alongside the --service option to define a service-specific variable.\n(A service is an application container in a \"microservices\" application.)\nWhen the --service option is used in conjunction with the --device option,\nthe service variable applies to the selected device only. Otherwise, it\napplies to all devices of the selected application (i.e., the application's\nfleet). If the --service option is omitted, the variable applies to all\nservices.\n\nIf VALUE is omitted, the CLI will attempt to use the value of the environment\nvariable of same name in the CLI process' environment. In this case, a warning\nmessage will be printed. Use `--quiet` to suppress it.\n\n'BALENA_' or 'RESIN_' are reserved variable name prefixes used to identify\n\"configuration variables\". Configuration variables control balena platform\nfeatures and are treated specially by balenaOS and the balena supervisor\nrunning on devices. They are also stored differently in the balenaCloud API\ndatabase. Configuration variables cannot be set for specific services,\ntherefore the --service option cannot be used when the variable name starts\nwith a reserved prefix. When defining custom application variables, please\navoid the reserved prefixes.\n\nApplications may be specified by app name, slug, or numeric ID. App slugs\nare the recommended option, as they are unique and unambiguous. Slugs\ncan be listed with the `balena apps` command. Note that slugs may change\nif the application is renamed.\nApp names are not unique and may result in \"Application is ambiguous\" errors\nat any time (even if it \"used to work in the past\"), for example if the name\nclashes with a newly created public application, or with apps from other balena\naccounts that you may have been invited to as a member. For this reason, app\nnames are especially discouraged in scripts (e.g. CI environments).\nNumeric app IDs are deprecated because they consist of an implementation detail\nof the balena backend. We intend to remove support for numeric IDs at some point\nin the future.","usage":"env add <name> [value]","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena env add TERM --application MyApp","$ balena env add EDITOR vim --application MyApp","$ balena env add EDITOR vim -a myorg/myapp","$ balena env add EDITOR vim --application MyApp,MyApp2","$ balena env add EDITOR vim --application MyApp --service MyService","$ balena env add EDITOR vim --application MyApp,MyApp2 --service MyService,MyService2","$ balena env add EDITOR vim --device 7cf02a6","$ balena env add EDITOR vim --device 7cf02a6,d6f1433","$ balena env add EDITOR vim --device 7cf02a6 --service MyService","$ balena env add EDITOR vim --device 7cf02a6,d6f1433 --service MyService,MyService2"],"flags":{"application":{"name":"application","type":"option","char":"a","description":"application name, slug (preferred), or numeric ID (deprecated)"},"device":{"name":"device","type":"option","char":"d","description":"device UUID"},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false},"quiet":{"name":"quiet","type":"boolean","char":"q","description":"suppress warning messages","allowNo":false},"service":{"name":"service","type":"option","char":"s","description":"service name"}},"args":[{"name":"name","description":"environment or config variable name","required":true},{"name":"value","description":"variable value; if omitted, use value from this process' environment","required":false}]},"env:rename":{"id":"env:rename","description":"Change the value of a config or env var for an app, device or service.\n\nChange the value of a configuration or environment variable for an application,\ndevice or service, as selected by command-line options.\n\nVariables are selected by their database ID (as reported by the 'balena envs'\ncommand) and one of six database \"resource types\":\n\n- application (fleet) environment variable\n- application (fleet) configuration variable (--config)\n- application (fleet) service variable (--service)\n- device environment variable (--device)\n- device configuration variable (--device --config)\n- device service variable (--device --service)\n\nThe --device option selects a device-specific variable instead of an application\n(fleet) variable.\n\nThe --config option selects a configuration variable. Configuration variable\nnames typically start with the 'BALENA_' or 'RESIN_' prefixes and are used to\nconfigure balena platform features.\n\nThe --service option selects a service variable, which is an environment variable\nthat applies to a specifc service (application container) in a microservices\n(multicontainer) application.\n\nThe --service and --config options cannot be used together, but they can be\nused alongside the --device option to select a device-specific service or\nconfiguration variable.","usage":"env rename <id> <value>","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena env rename 123123 emacs","$ balena env rename 234234 emacs --service","$ balena env rename 345345 emacs --device","$ balena env rename 456456 emacs --device --service","$ balena env rename 567567 1 --config","$ balena env rename 678678 1 --device --config"],"flags":{"config":{"name":"config","type":"boolean","char":"c","description":"select a configuration variable (may be used together with the --device option)","allowNo":false},"device":{"name":"device","type":"boolean","char":"d","description":"select a device-specific variable instead of an application (fleet) variable","allowNo":false},"service":{"name":"service","type":"boolean","char":"s","description":"select a service variable (may be used together with the --device option)","allowNo":false},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"id","description":"variable's numeric database ID","required":true},{"name":"value","description":"variable value; if omitted, use value from this process' environment","required":true}]},"env:rm":{"id":"env:rm","description":"Remove a config or env var from an application, device or service.\n\nRemove a configuration or environment variable from an application, device\nor service, as selected by command-line options.\n\nVariables are selected by their database ID (as reported by the 'balena envs'\ncommand) and one of six database \"resource types\":\n\n- application (fleet) environment variable\n- application (fleet) configuration variable (--config)\n- application (fleet) service variable (--service)\n- device environment variable (--device)\n- device configuration variable (--device --config)\n- device service variable (--device --service)\n\nThe --device option selects a device-specific variable instead of an application\n(fleet) variable.\n\nThe --config option selects a configuration variable. Configuration variable\nnames typically start with the 'BALENA_' or 'RESIN_' prefixes and are used to\nconfigure balena platform features.\n\nThe --service option selects a service variable, which is an environment variable\nthat applies to a specifc service (application container) in a microservices\n(multicontainer) application.\n\nThe --service and --config options cannot be used together, but they can be\nused alongside the --device option to select a device-specific service or\nconfiguration variable.\n\nInteractive confirmation is normally asked before the variable is deleted.\nThe --yes option disables this behavior.","usage":"env rm <id>","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena env rm 123123","$ balena env rm 234234 --yes","$ balena env rm 345345 --config","$ balena env rm 456456 --service","$ balena env rm 567567 --device","$ balena env rm 678678 --device --config","$ balena env rm 789789 --device --service --yes"],"flags":{"config":{"name":"config","type":"boolean","char":"c","description":"select a configuration variable (may be used together with the --device option)","allowNo":false},"device":{"name":"device","type":"boolean","char":"d","description":"select a device-specific variable instead of an application (fleet) variable","allowNo":false},"service":{"name":"service","type":"boolean","char":"s","description":"select a service variable (may be used together with the --device option)","allowNo":false},"yes":{"name":"yes","type":"boolean","char":"y","description":"do not prompt for confirmation before deleting the variable","allowNo":false}},"args":[{"name":"id","description":"variable's numeric database ID","required":true}]},"internal:osinit":{"id":"internal:osinit","description":"Do actual init of the device with the preconfigured os image.\n\nDon't use this command directly!\nUse `balena os initialize <image>` instead.","usage":"internal osinit IMAGE TYPE CONFIG","pluginName":"balena-cli","pluginType":"core","hidden":true,"aliases":[],"flags":{},"args":[{"name":"image","required":true},{"name":"type","required":true},{"name":"config","required":true}]},"key:add":{"id":"key:add","description":"Add an SSH key to balenaCloud.\n\nAdd an SSH key to the balenaCloud account of the logged in user.\n\nIf `path` is omitted, the command will attempt to read the SSH key from stdin.\n\nAbout SSH keys  \nAn \"SSH key\" actually consists of a public/private key pair. A typical name\nfor the private key file is \"id_rsa\", and a typical name for the public key\nfile is \"id_rsa.pub\". Both key files are saved to your computer (with the\nprivate key optionally protected by a password), but only the public key is\nsaved to your balena account.  This means that if you change computers or\notherwise lose the private key, you cannot recover the private key through\nyour balena account. You can however add new keys, and delete the old ones.\n\nTo generate a new SSH key pair, a nice guide can be found in GitHub's docs:\nhttps://help.github.com/en/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent\nSkip the step about adding the key to a GitHub account, and instead add it to\nyour balena account.","usage":"key add <name> [path]","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena key add Main ~/.ssh/id_rsa.pub","$ cat ~/.ssh/id_rsa.pub | balena key add Main","# Windows 10 (cmd.exe prompt) example","$ balena key add Main %userprofile%.sshid_rsa.pub"],"flags":{"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"name","description":"the SSH key name","required":true},{"name":"path","description":"the path to the public key file"}]},"key":{"id":"key","description":"Display an SSH key.\n\nDisplay a single SSH key registered in balenaCloud for the logged in user.","usage":"key <id>","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena key 17"],"flags":{"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"id","description":"balenaCloud ID for the SSH key","required":true}]},"key:rm":{"id":"key:rm","description":"Remove an SSH key from balenaCloud.\n\nRemove a single SSH key registered in balenaCloud for the logged in user.\n\nThe --yes option may be used to avoid interactive confirmation.","usage":"key rm <id>","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena key rm 17","$ balena key rm 17 --yes"],"flags":{"yes":{"name":"yes","type":"boolean","char":"y","description":"answer \"yes\" to all questions (non interactive use)","allowNo":false},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"id","description":"balenaCloud ID for the SSH key","required":true}]},"local:configure":{"id":"local:configure","description":"(Re)configure a balenaOS drive or image.\n\nConfigure or reconfigure a balenaOS drive or image.","usage":"local configure <target>","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena local configure /dev/sdc","$ balena local configure path/to/image.img"],"flags":{"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"target","description":"path of drive or image to configure","required":true}]},"local:flash":{"id":"local:flash","description":"Flash an image to a drive.\n\nFlash a balenaOS image to a drive.\nImage file may be one of: .img|.zip|.gz|.bz2|.xz\n\nIf --drive is not specified, then it will interactively\nshow a list of available drives for selection.","usage":"local flash <image>","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena local flash path/to/balenaos.img","$ balena local flash path/to/balenaos.img --drive /dev/disk2","$ balena local flash path/to/balenaos.img --drive /dev/disk2 --yes"],"flags":{"drive":{"name":"drive","type":"option","char":"d","description":"the drive to write the image to, eg. `/dev/sdb` or `/dev/mmcblk0`.\nCareful with this as you can erase your hard drive.\nCheck `balena util available-drives` for available options."},"yes":{"name":"yes","type":"boolean","char":"y","description":"answer \"yes\" to all questions (non interactive use)","allowNo":false},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"image","description":"path to OS image","required":true}]},"os:build-config":{"id":"os:build-config","description":"Build an OS config and save it to a JSON file.\n\nInteractively generate an OS config once, so that the generated config\nfile can be used in `balena os configure`, skipping the interactive part.","usage":"os build-config <image> <device-type>","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena os build-config ../path/rpi3.img raspberrypi3 --output rpi3-config.json","$ balena os configure ../path/rpi3.img --device 7cf02a6 --config rpi3-config.json"],"flags":{"advanced":{"name":"advanced","type":"boolean","char":"v","description":"show advanced configuration options","allowNo":false},"output":{"name":"output","type":"option","char":"o","description":"path to output JSON file","required":true},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"image","description":"os image","required":true},{"name":"device-type","description":"device type","required":true}]},"os:configure":{"id":"os:configure","description":"Configure a previously downloaded balenaOS image.\n\nConfigure a previously downloaded balenaOS image for a specific device type or\nbalena application.\n\nConfiguration settings such as WiFi authentication will be taken from the\nfollowing sources, in precedence order:\n1. Command-line options like `--config-wifi-ssid`\n2. A given `config.json` file specified with the `--config` option.\n3. User input through interactive prompts (text menus).\n\nThe --device-type option may be used to override the application's default\ndevice type, in case of an application with mixed device types.\n\nThe --system-connection (-c) option can be used to inject NetworkManager connection\nprofiles for additional network interfaces, such as cellular/GSM or additional\nWiFi or ethernet connections. This option may be passed multiple times in case there\nare multiple files to inject. See connection profile examples and reference at:\nhttps://www.balena.io/docs/reference/OS/network/2.x/\nhttps://developer.gnome.org/NetworkManager/stable/nm-settings.html\n\nThe --device-api-key option is deprecated and will be removed in a future release.\nA suitable key is automatically generated or fetched if this option is omitted.\n\nApplications may be specified by app name, slug, or numeric ID. App slugs\nare the recommended option, as they are unique and unambiguous. Slugs\ncan be listed with the `balena apps` command. Note that slugs may change\nif the application is renamed.\nApp names are not unique and may result in \"Application is ambiguous\" errors\nat any time (even if it \"used to work in the past\"), for example if the name\nclashes with a newly created public application, or with apps from other balena\naccounts that you may have been invited to as a member. For this reason, app\nnames are especially discouraged in scripts (e.g. CI environments).\nNumeric app IDs are deprecated because they consist of an implementation detail\nof the balena backend. We intend to remove support for numeric IDs at some point\nin the future.\n\nNote: This command is currently not supported on Windows natively. Windows users\nare advised to install the Windows Subsystem for Linux (WSL) with Ubuntu, and use\nthe Linux release of the balena CLI:\nhttps://docs.microsoft.com/en-us/windows/wsl/about","usage":"os configure <image>","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena os configure ../path/rpi3.img --device 7cf02a6","$ balena os configure ../path/rpi3.img --device 7cf02a6 --device-api-key <existingDeviceKey>","$ balena os configure ../path/rpi3.img --app MyApp","$ balena os configure ../path/rpi3.img -a myorg/myapp","$ balena os configure ../path/rpi3.img --app MyApp --version 2.12.7","$ balena os configure ../path/rpi3.img --app MyFinApp --device-type raspberrypi3","$ balena os configure ../path/rpi3.img --app MyFinApp --device-type raspberrypi3 --config myWifiConfig.json"],"flags":{"advanced":{"name":"advanced","type":"boolean","char":"v","description":"ask advanced configuration questions (when in interactive mode)","allowNo":false},"application":{"name":"application","type":"option","char":"a","description":"application name, slug (preferred), or numeric ID (deprecated)"},"app":{"name":"app","type":"option","description":"same as '--application'"},"config":{"name":"config","type":"option","description":"path to a pre-generated config.json file to be injected in the OS image"},"config-app-update-poll-interval":{"name":"config-app-update-poll-interval","type":"option","description":"interval (in minutes) for the on-device balena supervisor periodic app update check"},"config-network":{"name":"config-network","type":"option","description":"device network type (non-interactive configuration)","options":["ethernet","wifi"]},"config-wifi-key":{"name":"config-wifi-key","type":"option","description":"WiFi key (password) (non-interactive configuration)"},"config-wifi-ssid":{"name":"config-wifi-ssid","type":"option","description":"WiFi SSID (network name) (non-interactive configuration)"},"device":{"name":"device","type":"option","char":"d","description":"device UUID"},"device-api-key":{"name":"device-api-key","type":"option","char":"k","description":"custom device API key (DEPRECATED and only supported with balenaOS 2.0.3+)"},"device-type":{"name":"device-type","type":"option","description":"device type slug (e.g. \"raspberrypi3\") to override the application device type"},"initial-device-name":{"name":"initial-device-name","type":"option","description":"This option will set the device name when the device provisions"},"version":{"name":"version","type":"option","description":"balenaOS version, for example \"2.32.0\" or \"2.44.0+rev1\""},"system-connection":{"name":"system-connection","type":"option","char":"c","description":"paths to local files to place into the 'system-connections' directory","required":false},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"image","description":"path to a balenaOS image file, e.g. \"rpi3.img\"","required":true}]},"os:download":{"id":"os:download","description":"Download an unconfigured OS image.\n\nDownload an unconfigured OS image for a certain device type.\nCheck available types with `balena devices supported`\n\nNote: Currently this command only works with balenaCloud, not openBalena.\nIf using openBalena, please download the OS from: https://www.balena.io/os/\n\nIf version is not specified the newest stable (non-pre-release) version of OS\nis downloaded (if available), otherwise the newest version (if all existing\nversions for the given device type are pre-release).\n\nYou can pass `--version menu` to pick the OS version from the interactive menu\nof all available versions.\n\nTo download a development image append `.dev` to the version or select from\nthe interactive menu.","usage":"os download <type>","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena os download raspberrypi3 -o ../foo/bar/raspberry-pi.img","$ balena os download raspberrypi3 -o ../foo/bar/raspberry-pi.img --version 2.60.1+rev1","$ balena os download raspberrypi3 -o ../foo/bar/raspberry-pi.img --version 2.60.1+rev1.dev","$ balena os download raspberrypi3 -o ../foo/bar/raspberry-pi.img --version ^2.60.0","$ balena os download raspberrypi3 -o ../foo/bar/raspberry-pi.img --version latest","$ balena os download raspberrypi3 -o ../foo/bar/raspberry-pi.img --version default","$ balena os download raspberrypi3 -o ../foo/bar/raspberry-pi.img --version menu"],"flags":{"output":{"name":"output","type":"option","char":"o","description":"output path","required":true},"version":{"name":"version","type":"option","description":"exact version number, or a valid semver range,\nor 'latest' (includes pre-releases),\nor 'default' (excludes pre-releases if at least one stable version is available),\nor 'recommended' (excludes pre-releases, will fail if only pre-release versions are available),\nor 'menu' (will show the interactive menu)"},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"type","description":"the device type","required":true}]},"os:initialize":{"id":"os:initialize","description":"Initialize an os image for a device.\n\n\t\tInitialize an os image for a device with a previously\n\t\tconfigured operating system image.\n\t\t\n\nNote: Initializing the device may ask for administrative permissions\nbecause we need to access the raw devices directly.","usage":"os initialize <image>","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena os initialize ../path/rpi.img --type raspberry-pi"],"flags":{"type":{"name":"type","type":"option","char":"t","description":"device type (Check available types with `balena devices supported`)","required":true},"drive":{"name":"drive","type":"option","char":"d","description":"the drive to write the image to, eg. `/dev/sdb` or `/dev/mmcblk0`.\nCareful with this as you can erase your hard drive.\nCheck `balena util available-drives` for available options."},"yes":{"name":"yes","type":"boolean","char":"y","description":"answer \"yes\" to all questions (non interactive use)","allowNo":false},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"image","description":"path to OS image","required":true}]},"os:versions":{"id":"os:versions","description":"Show available balenaOS versions for the given device type.\n\nShow the available balenaOS versions for the given device type.\nCheck available types with `balena devices supported`.","usage":"os versions <type>","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena os versions raspberrypi3"],"flags":{"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"type","description":"device type","required":true}]},"tag:rm":{"id":"tag:rm","description":"Remove a tag from an application, device or release.\n\nRemove a tag from an application, device or release.\n\nApplications may be specified by app name, slug, or numeric ID. App slugs\nare the recommended option, as they are unique and unambiguous. Slugs\ncan be listed with the `balena apps` command. Note that slugs may change\nif the application is renamed.\nApp names are not unique and may result in \"Application is ambiguous\" errors\nat any time (even if it \"used to work in the past\"), for example if the name\nclashes with a newly created public application, or with apps from other balena\naccounts that you may have been invited to as a member. For this reason, app\nnames are especially discouraged in scripts (e.g. CI environments).\nNumeric app IDs are deprecated because they consist of an implementation detail\nof the balena backend. We intend to remove support for numeric IDs at some point\nin the future.","usage":"tag rm <tagKey>","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena tag rm myTagKey --application MyApp","$ balena tag rm myTagKey -a myorg/myapp","$ balena tag rm myTagKey --device 7cf02a6","$ balena tag rm myTagKey --release 1234","$ balena tag rm myTagKey --release b376b0e544e9429483b656490e5b9443b4349bd6"],"flags":{"application":{"name":"application","type":"option","char":"a","description":"application name, slug (preferred), or numeric ID (deprecated)"},"app":{"name":"app","type":"option","description":"same as '--application'"},"device":{"name":"device","type":"option","char":"d","description":"device UUID"},"release":{"name":"release","type":"option","char":"r","description":"release id"},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"tagKey","description":"the key string of the tag","required":true}]},"tag:set":{"id":"tag:set","description":"Set a tag on an application, device or release.\n\nSet a tag on an application, device or release.\n\nYou can optionally provide a value to be associated with the created\ntag, as an extra argument after the tag key. If a value isn't\nprovided, a tag with an empty value is created.\n\nApplications may be specified by app name, slug, or numeric ID. App slugs\nare the recommended option, as they are unique and unambiguous. Slugs\ncan be listed with the `balena apps` command. Note that slugs may change\nif the application is renamed.\nApp names are not unique and may result in \"Application is ambiguous\" errors\nat any time (even if it \"used to work in the past\"), for example if the name\nclashes with a newly created public application, or with apps from other balena\naccounts that you may have been invited to as a member. For this reason, app\nnames are especially discouraged in scripts (e.g. CI environments).\nNumeric app IDs are deprecated because they consist of an implementation detail\nof the balena backend. We intend to remove support for numeric IDs at some point\nin the future.","usage":"tag set <tagKey> [value]","pluginName":"balena-cli","pluginType":"core","aliases":[],"examples":["$ balena tag set mySimpleTag --application MyApp","$ balena tag set mySimpleTag -a myorg/myapp","$ balena tag set myCompositeTag myTagValue --application MyApp","$ balena tag set myCompositeTag myTagValue --device 7cf02a6","$ balena tag set myCompositeTag \"my tag value with whitespaces\" --device 7cf02a6","$ balena tag set myCompositeTag myTagValue --release 1234","$ balena tag set myCompositeTag --release 1234","$ balena tag set myCompositeTag --release b376b0e544e9429483b656490e5b9443b4349bd6"],"flags":{"application":{"name":"application","type":"option","char":"a","description":"application name, slug (preferred), or numeric ID (deprecated)"},"app":{"name":"app","type":"option","description":"same as '--application'"},"device":{"name":"device","type":"option","char":"d","description":"device UUID"},"release":{"name":"release","type":"option","char":"r","description":"release id"},"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[{"name":"tagKey","description":"the key string of the tag","required":true},{"name":"value","description":"the optional value associated with the tag","required":false}]},"util:available-drives":{"id":"util:available-drives","description":"List available drives.\n\nList available drives which are usable for writing an OS image to.\nDoes not list system drives.","usage":"util available-drives","pluginName":"balena-cli","pluginType":"core","aliases":[],"flags":{"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false}},"args":[]}}}