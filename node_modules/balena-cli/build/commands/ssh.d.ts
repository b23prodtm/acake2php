import { flags } from '@oclif/command';
import Command from '../command';
import * as BalenaSdk from 'balena-sdk';
interface FlagsDef {
    port?: number;
    tty: boolean;
    verbose: boolean;
    noproxy: boolean;
    help: void;
}
export default class SshCmd extends Command {
    static description: string;
    static examples: string[];
    static args: {
        name: string;
        description: string;
        required: boolean;
    }[];
    static usage: string;
    static flags: flags.Input<FlagsDef>;
    static primary: boolean;
    run(): Promise<void>;
    getContainerId(sdk: BalenaSdk.BalenaSDK, uuid: string, serviceName: string, sshOpts: {
        port?: number;
        proxyCommand?: string[];
        proxyUrl: string;
        username: string;
    }, version?: string, id?: number): Promise<string>;
    generateVpnSshCommand(opts: {
        uuid: string;
        command: string;
        verbose: boolean;
        port?: number;
        username: string;
        proxyUrl: string;
        proxyCommand?: string[];
    }): string[];
}
export {};
