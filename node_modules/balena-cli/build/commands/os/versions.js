"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const command_1 = require("../../command");
const cf = require("../../utils/common-flags");
const lazy_1 = require("../../utils/lazy");
class OsVersionsCmd extends command_1.default {
    async run() {
        const { args: params } = this.parse(OsVersionsCmd);
        const { versions: vs, recommended, } = await lazy_1.getBalenaSdk().models.os.getSupportedVersions(params.type);
        vs.forEach((v) => {
            console.log(`v${v}` + (v === recommended ? ' (recommended)' : ''));
        });
    }
}
exports.default = OsVersionsCmd;
OsVersionsCmd.description = lazy_1.stripIndent `
		Show available balenaOS versions for the given device type.

		Show the available balenaOS versions for the given device type.
		Check available types with \`balena devices supported\`.
	`;
OsVersionsCmd.examples = ['$ balena os versions raspberrypi3'];
OsVersionsCmd.args = [
    {
        name: 'type',
        description: 'device type',
        required: true,
    },
];
OsVersionsCmd.usage = 'os versions <type>';
OsVersionsCmd.flags = {
    help: cf.help,
};
//# sourceMappingURL=versions.js.map