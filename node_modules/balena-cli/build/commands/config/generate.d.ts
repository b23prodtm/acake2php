import { flags } from '@oclif/command';
import Command from '../../command';
interface FlagsDef {
    version: string;
    application?: string;
    app?: string;
    device?: string;
    deviceApiKey?: string;
    deviceType?: string;
    'generate-device-api-key': boolean;
    output?: string;
    network?: string;
    wifiSsid?: string;
    wifiKey?: string;
    appUpdatePollInterval?: string;
    help: void;
}
export default class ConfigGenerateCmd extends Command {
    static description: string;
    static examples: string[];
    static usage: string;
    static flags: flags.Input<FlagsDef>;
    static authenticated: boolean;
    run(): Promise<void>;
    protected readonly missingDeviceOrAppMessage: string;
    protected readonly deviceTypeNotAllowedMessage = "The --deviceType option can only be used alongside the --application option";
    protected validateOptions(options: FlagsDef): Promise<void>;
}
export {};
