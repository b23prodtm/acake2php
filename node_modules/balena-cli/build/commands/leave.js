"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const command_1 = require("../command");
const cf = require("../utils/common-flags");
const lazy_1 = require("../utils/lazy");
const validation_1 = require("../utils/validation");
class LeaveCmd extends command_1.default {
    async run() {
        const { args: params } = this.parse(LeaveCmd);
        const promote = await Promise.resolve().then(() => require('../utils/promote'));
        const logger = await command_1.default.getLogger();
        return promote.leave(logger, params.deviceIpOrHostname);
    }
}
exports.default = LeaveCmd;
LeaveCmd.description = lazy_1.stripIndent `
		Remove a local device from its balena application.

		Remove a local device from its balena application, causing the device to
		"leave" the server it is provisioned on. This effectively makes the device
		"unmanaged". The device must be running balenaOS.

		The device entry on the server is preserved after running this command,
		so the device can subsequently re-join the server if needed.

		If you don't specify a device hostname or IP, this command will automatically
		scan the local network for balenaOS devices and prompt you to select one
		from an interactive picker. This may require administrator/root privileges.
	`;
LeaveCmd.examples = [
    '$ balena leave',
    '$ balena leave balena.local',
    '$ balena leave 192.168.1.25',
];
LeaveCmd.args = [
    {
        name: 'deviceIpOrHostname',
        description: 'the device IP or hostname',
        parse: validation_1.parseAsLocalHostnameOrIp,
    },
];
LeaveCmd.usage = 'leave [deviceIpOrHostname]';
LeaveCmd.flags = {
    help: cf.help,
};
LeaveCmd.authenticated = true;
LeaveCmd.primary = true;
//# sourceMappingURL=leave.js.map