"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const command_1 = require("../../command");
const cf = require("../../utils/common-flags");
const lazy_1 = require("../../utils/lazy");
class DeviceDeactivateCmd extends command_1.default {
    async run() {
        const { args: params, flags: options } = this.parse(DeviceDeactivateCmd);
        const balena = lazy_1.getBalenaSdk();
        const patterns = await Promise.resolve().then(() => require('../../utils/patterns'));
        const uuid = params.uuid;
        const deactivationWarning = `
Warning! Deactivating a device will charge a fee equivalent to the
normal monthly cost for the device (e.g. $1 for an essentials device);
the device will not be charged again until it comes online.
`;
        const warning = `Are you sure you want to deactivate device ${uuid} ?`;
        console.error(deactivationWarning);
        await patterns.confirm(options.yes, warning);
        await balena.models.device.deactivate(uuid);
    }
}
exports.default = DeviceDeactivateCmd;
DeviceDeactivateCmd.description = lazy_1.stripIndent `
		Deactivate a device.

		Deactivate a device.

		Note this command asks for confirmation interactively.
		You can avoid this by passing the \`--yes\` option.
		`;
DeviceDeactivateCmd.examples = [
    '$ balena device deactivate 7cf02a6',
    '$ balena device deactivate 7cf02a6 --yes',
];
DeviceDeactivateCmd.args = [
    {
        name: 'uuid',
        description: 'the UUID of the device to be deactivated',
        required: true,
    },
];
DeviceDeactivateCmd.usage = 'device deactivate <uuid>';
DeviceDeactivateCmd.flags = {
    yes: cf.yes,
    help: cf.help,
};
DeviceDeactivateCmd.authenticated = true;
//# sourceMappingURL=deactivate.js.map