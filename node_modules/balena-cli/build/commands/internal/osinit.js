"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const command_1 = require("../../command");
const lazy_1 = require("../../utils/lazy");
const oclif_utils_1 = require("../../utils/oclif-utils");
class OsinitCmd extends command_1.default {
    async run() {
        const { args: params } = this.parse(OsinitCmd);
        const config = JSON.parse(params.config);
        const { getManifest, osProgressHandler } = await Promise.resolve().then(() => require('../../utils/helpers'));
        const manifest = await getManifest(params.image, params.type);
        const { initialize } = await Promise.resolve().then(() => require('balena-device-init'));
        const initializeEmitter = await initialize(params.image, manifest, config);
        await osProgressHandler(initializeEmitter);
    }
}
exports.default = OsinitCmd;
OsinitCmd.description = lazy_1.stripIndent `
		Do actual init of the device with the preconfigured os image.

		Don't use this command directly!
		Use \`balena os initialize <image>\` instead.
	`;
OsinitCmd.args = [
    {
        name: 'image',
        required: true,
    },
    {
        name: 'type',
        required: true,
    },
    {
        name: 'config',
        required: true,
    },
];
OsinitCmd.usage = ('internal osinit ' +
    new oclif_utils_1.CommandHelp({ args: OsinitCmd.args }).defaultUsage()).trim();
OsinitCmd.hidden = true;
OsinitCmd.root = true;
//# sourceMappingURL=osinit.js.map