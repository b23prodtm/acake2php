"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const command_1 = require("../../command");
const cf = require("../../utils/common-flags");
const ca = require("../../utils/common-args");
const lazy_1 = require("../../utils/lazy");
const messages_1 = require("../../utils/messages");
class AppRmCmd extends command_1.default {
    async run() {
        var _a;
        const { args: params, flags: options } = this.parse(AppRmCmd);
        const { confirm } = await Promise.resolve().then(() => require('../../utils/patterns'));
        const { getApplication } = await Promise.resolve().then(() => require('../../utils/sdk'));
        const balena = lazy_1.getBalenaSdk();
        await confirm((_a = options.yes) !== null && _a !== void 0 ? _a : false, `Are you sure you want to delete application ${params.application}?`);
        const application = await getApplication(balena, params.application);
        await balena.models.application.remove(application.id);
    }
}
exports.default = AppRmCmd;
AppRmCmd.description = lazy_1.stripIndent `
		Remove an application.

		Permanently remove a balena application.

		The --yes option may be used to avoid interactive confirmation.

		${messages_1.applicationIdInfo.split('\n').join('\n\t\t')}
	`;
AppRmCmd.examples = [
    '$ balena app rm MyApp',
    '$ balena app rm MyApp --yes',
    '$ balena app rm myorg/myapp',
];
AppRmCmd.args = [ca.applicationRequired];
AppRmCmd.usage = 'app rm <application>';
AppRmCmd.flags = {
    yes: cf.yes,
    help: cf.help,
};
AppRmCmd.authenticated = true;
//# sourceMappingURL=rm.js.map