"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const command_1 = require("../../command");
const cf = require("../../utils/common-flags");
const ca = require("../../utils/common-args");
const lazy_1 = require("../../utils/lazy");
const messages_1 = require("../../utils/messages");
class AppPurgeCmd extends command_1.default {
    async run() {
        const { args: params } = this.parse(AppPurgeCmd);
        const { getApplication } = await Promise.resolve().then(() => require('../../utils/sdk'));
        const balena = lazy_1.getBalenaSdk();
        const application = await getApplication(balena, params.application);
        try {
            await balena.models.application.purge(application.id);
        }
        catch (e) {
            if (e.message.toLowerCase().includes('no online device(s) found')) {
            }
            else {
                throw e;
            }
        }
    }
}
exports.default = AppPurgeCmd;
AppPurgeCmd.description = lazy_1.stripIndent `
		Purge data from an application.

		Purge data from all devices belonging to an application.
		This will clear the application's /data directory.

		${messages_1.applicationIdInfo.split('\n').join('\n\t\t')}
	`;
AppPurgeCmd.examples = [
    '$ balena app purge MyApp',
    '$ balena app purge myorg/myapp',
];
AppPurgeCmd.args = [ca.applicationRequired];
AppPurgeCmd.usage = 'app purge <application>';
AppPurgeCmd.flags = {
    help: cf.help,
};
AppPurgeCmd.authenticated = true;
//# sourceMappingURL=purge.js.map