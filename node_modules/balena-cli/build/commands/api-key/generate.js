"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const command_1 = require("../../command");
const errors_1 = require("../../errors");
const cf = require("../../utils/common-flags");
const lazy_1 = require("../../utils/lazy");
class GenerateCmd extends command_1.default {
    async run() {
        const { args: params } = this.parse(GenerateCmd);
        let key;
        try {
            key = await lazy_1.getBalenaSdk().models.apiKey.create(params.name);
        }
        catch (e) {
            if (e.name === 'BalenaNotLoggedIn') {
                throw new errors_1.ExpectedError(lazy_1.stripIndent `
					This command cannot be run when logged in with an API key.
					Please login again with 'balena login' and select an alternative method.
				`);
            }
            else {
                throw e;
            }
        }
        console.log(lazy_1.stripIndent `
			Registered api key '${params.name}':

			${key}

			This key will not be shown again, so please save it now.
		`);
    }
}
exports.default = GenerateCmd;
GenerateCmd.description = lazy_1.stripIndent `
		Generate a new balenaCloud API key.

		Generate a new balenaCloud API key for the current user, with the given
		name. The key will be logged to the console.

		This key can be used to log into the CLI using 'balena login --token <key>',
		or to authenticate requests to the API with an 'Authorization: Bearer <key>' header.
`;
GenerateCmd.examples = ['$ balena api-key generate "Jenkins Key"'];
GenerateCmd.args = [
    {
        name: 'name',
        description: 'the API key name',
        required: true,
    },
];
GenerateCmd.usage = 'api-key generate <name>';
GenerateCmd.flags = {
    help: cf.help,
};
GenerateCmd.authenticated = true;
//# sourceMappingURL=generate.js.map