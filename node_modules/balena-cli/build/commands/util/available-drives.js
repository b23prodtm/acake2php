"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const command_1 = require("../../command");
const cf = require("../../utils/common-flags");
const lazy_1 = require("../../utils/lazy");
class UtilAvailableDrivesCmd extends command_1.default {
    async run() {
        this.parse(UtilAvailableDrivesCmd);
        const sdk = await Promise.resolve().then(() => require('etcher-sdk'));
        const adapter = new sdk.scanner.adapters.BlockDeviceAdapter(() => false);
        const scanner = new sdk.scanner.Scanner([adapter]);
        await scanner.start();
        function prepareDriveInfo(drive) {
            const size = drive.size / 1000000000;
            return {
                device: drive.device,
                size: `${size.toFixed(1)} GB`,
                description: drive.description,
            };
        }
        if (scanner.drives.size === 0) {
            console.error(`${lazy_1.getChalk().red('x')} No available drives were detected, plug one in!`);
        }
        else {
            console.log(lazy_1.getVisuals().table.horizontal(Array.from(scanner.drives).map(prepareDriveInfo), ['device', 'size', 'description']));
        }
        scanner.stop();
    }
}
exports.default = UtilAvailableDrivesCmd;
UtilAvailableDrivesCmd.description = lazy_1.stripIndent `
		List available drives.

		List available drives which are usable for writing an OS image to.
		Does not list system drives.
	`;
UtilAvailableDrivesCmd.usage = 'util available-drives';
UtilAvailableDrivesCmd.flags = {
    help: cf.help,
};
//# sourceMappingURL=available-drives.js.map