"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const command_1 = require("@oclif/command");
const command_2 = require("../command");
const cf = require("../utils/common-flags");
const lazy_1 = require("../utils/lazy");
class AppsCmd extends command_2.default {
    async run() {
        this.parse(AppsCmd);
        const balena = lazy_1.getBalenaSdk();
        const applications = (await balena.models.application.getAll({
            $select: ['id', 'app_name', 'slug'],
            $expand: {
                is_for__device_type: { $select: 'slug' },
                owns__device: { $select: 'is_online' },
            },
        }));
        const _ = await Promise.resolve().then(() => require('lodash'));
        applications.forEach((application) => {
            var _a, _b;
            application.device_count = (_b = (_a = application.owns__device) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0;
            application.online_devices = _.sumBy(application.owns__device, (d) => d.is_online === true ? 1 : 0);
            application.device_type = application.is_for__device_type[0].slug;
        });
        console.log(lazy_1.getVisuals().table.horizontal(applications, [
            'id',
            'app_name',
            'slug',
            'device_type',
            'online_devices',
            'device_count',
        ]));
    }
}
exports.default = AppsCmd;
AppsCmd.description = lazy_1.stripIndent `
		List all applications.

		list all your balena applications.

		For detailed information on a particular application,
		use \`balena app <application>\` instead.
	`;
AppsCmd.examples = ['$ balena apps'];
AppsCmd.usage = 'apps';
AppsCmd.flags = {
    help: cf.help,
    verbose: command_1.flags.boolean({
        default: false,
        char: 'v',
        description: 'No-op since release v12.0.0',
    }),
};
AppsCmd.authenticated = true;
AppsCmd.primary = true;
//# sourceMappingURL=apps.js.map