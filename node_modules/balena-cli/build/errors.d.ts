import { TypedError } from 'typed-error';
export declare class ExpectedError extends TypedError {
    code?: string;
    exitCode?: number;
}
export declare class NotLoggedInError extends ExpectedError {
}
export declare class InsufficientPrivilegesError extends ExpectedError {
}
export declare class InvalidPortMappingError extends ExpectedError {
    constructor(mapping: string);
}
export declare class NoPortsDefinedError extends ExpectedError {
    constructor();
}
export declare class SIGINTError extends ExpectedError {
}
export declare function instanceOf(err: any, klass: any): boolean;
export declare const getSentry: () => Promise<typeof import("@sentry/node")>;
export declare function handleError(error: Error | string): Promise<void>;
export declare const printErrorMessage: (message: string) => void;
export declare const printExpectedErrorMessage: (message: string) => void;
export declare function exitWithExpectedError(message: string | Error): never;
