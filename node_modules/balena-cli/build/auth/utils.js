"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.loginIfTokenValid = exports.getDashboardLoginURL = void 0;
const _ = require("lodash");
const url = require("url");
const lazy_1 = require("../utils/lazy");
exports.getDashboardLoginURL = (callbackUrl) => {
    callbackUrl = encodeURIComponent(callbackUrl).replace(/%/g, '%25');
    return lazy_1.getBalenaSdk()
        .settings.get('dashboardUrl')
        .then((dashboardUrl) => url.resolve(dashboardUrl, `/login/cli/${callbackUrl}`));
};
exports.loginIfTokenValid = async (token) => {
    if (_.isEmpty(token === null || token === void 0 ? void 0 : token.trim())) {
        return false;
    }
    const balena = lazy_1.getBalenaSdk();
    let currentToken;
    try {
        currentToken = await balena.auth.getToken();
    }
    catch (_a) {
    }
    await balena.auth.loginWithToken(token);
    const isLoggedIn = await balena.auth.isLoggedIn();
    if (!isLoggedIn) {
        if (currentToken != null) {
            await balena.auth.loginWithToken(currentToken);
        }
        else {
            await balena.auth.logout();
        }
    }
    return isLoggedIn;
};
//# sourceMappingURL=utils.js.map