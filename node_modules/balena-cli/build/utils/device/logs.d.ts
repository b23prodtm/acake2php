import * as _ from 'lodash';
import Logger = require('../logger');
interface Log {
    message: string;
    timestamp?: number;
    serviceName?: string;
}
interface BuildLog {
    serviceName: string;
    message: string;
}
export declare function connectAndDisplayDeviceLogs({ deviceApi, logger, system, filterServices, maxAttempts, }: {
    deviceApi: import('./api').DeviceAPI;
    logger: Logger;
    system: boolean;
    filterServices?: string[];
    maxAttempts?: number;
}): Promise<void>;
export declare function displayBuildLog(log: BuildLog, logger: Logger): void;
export declare function displayLogObject<T extends Log>(obj: T, logger: Logger, system: boolean, filterServices?: string[]): void;
export declare const getServiceColourFn: typeof _getServiceColourFn & _.MemoizedFunction;
declare function _getServiceColourFn(serviceName: string): (msg: string) => string;
export {};
