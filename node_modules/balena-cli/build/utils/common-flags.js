"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.json = exports.drive = exports.force = exports.yes = exports.verbose = exports.service = exports.release = exports.quiet = exports.help = exports.device = exports.app = exports.application = void 0;
const command_1 = require("@oclif/command");
const lazy_1 = require("./lazy");
const normalization_1 = require("./normalization");
exports.application = command_1.flags.string({
    char: 'a',
    description: 'application name, slug (preferred), or numeric ID (deprecated)',
    parse: normalization_1.lowercaseIfSlug,
});
exports.app = command_1.flags.string({
    description: "same as '--application'",
    parse: normalization_1.lowercaseIfSlug,
});
exports.device = command_1.flags.string({
    char: 'd',
    description: 'device UUID',
});
exports.help = command_1.flags.help({ char: 'h' });
exports.quiet = command_1.flags.boolean({
    char: 'q',
    description: 'suppress warning messages',
    default: false,
});
exports.release = command_1.flags.string({
    char: 'r',
    description: 'release id',
});
exports.service = command_1.flags.string({
    char: 's',
    description: 'service name',
});
exports.verbose = command_1.flags.boolean({
    char: 'v',
    description: 'produce verbose output',
    default: false,
});
exports.yes = command_1.flags.boolean({
    char: 'y',
    description: 'answer "yes" to all questions (non interactive use)',
    default: false,
});
exports.force = command_1.flags.boolean({
    char: 'f',
    description: 'force action if the update lock is set',
    default: false,
});
exports.drive = command_1.flags.string({
    char: 'd',
    description: lazy_1.stripIndent `
		the drive to write the image to, eg. \`/dev/sdb\` or \`/dev/mmcblk0\`.
		Careful with this as you can erase your hard drive.
		Check \`balena util available-drives\` for available options.
	`,
});
exports.json = command_1.flags.boolean({
    char: 'j',
    description: 'produce JSON output instead of tabular output',
    default: false,
});
//# sourceMappingURL=common-flags.js.map