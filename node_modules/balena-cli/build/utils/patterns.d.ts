/// <reference types="bluebird" />
import type * as BalenaSdk from 'balena-sdk';
import type { Organization } from 'balena-sdk';
export declare function authenticate(options: {}): Promise<void>;
export declare function checkLoggedIn(): Promise<void>;
export declare function askLoginType(): import("bluebird")<"token" | "web" | "credentials" | "register">;
export declare function selectDeviceType(): Promise<string>;
export declare function confirm(yesOption: boolean, message: string, yesMessage?: string, exitIfDeclined?: boolean): Promise<void>;
export declare function selectApplication(filter?: (app: ApplicationWithDeviceType) => boolean, errorOnEmptySelection?: boolean): Promise<ApplicationWithDeviceType>;
export declare function selectOrganization(organizations?: Organization[]): Promise<string>;
export declare function awaitDevice(uuid: string): Promise<string>;
export declare function awaitDeviceOsUpdate(uuid: string, targetOsVersion: string): Promise<string>;
export declare function inferOrSelectDevice(preferredUuid: string): Promise<string>;
export declare function getOnlineTargetDeviceUuid(sdk: BalenaSdk.BalenaSDK, applicationOrDevice: string): Promise<string>;
export declare function selectFromList<T>(message: string, choices: Array<T & {
    name: string;
}>): Promise<T>;
