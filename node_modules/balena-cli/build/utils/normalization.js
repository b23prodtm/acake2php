"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.lowercaseIfSlug = exports.disambiguateReleaseParam = void 0;
const errors_1 = require("../errors");
async function disambiguateReleaseParam(balena, release) {
    const mixedCaseHex = /^[a-fA-F0-9]+$/;
    if (!release || !mixedCaseHex.test(release)) {
        throw new errors_1.ExpectedError('Invalid release parameter');
    }
    const possibleUuidHashLength = [7, 8, 9, 32, 40, 62].includes(release.length);
    const hasLeadingZero = release[0] === '0';
    const isOnlyNumerical = /^[0-9]+$/.test(release);
    if (!isOnlyNumerical && !possibleUuidHashLength) {
        throw new errors_1.ExpectedError('Invalid release parameter');
    }
    if (hasLeadingZero && !possibleUuidHashLength) {
        throw new errors_1.ExpectedError('Invalid release parameter');
    }
    if (!isOnlyNumerical || hasLeadingZero) {
        return release;
    }
    try {
        return (await balena.models.release.get(parseInt(release, 10), {
            $select: 'id',
        })).id;
    }
    catch (e) {
        if (e.name !== 'BalenaReleaseNotFound') {
            throw e;
        }
    }
    return (await balena.models.release.get(release, { $select: 'id' })).id;
}
exports.disambiguateReleaseParam = disambiguateReleaseParam;
function lowercaseIfSlug(s) {
    return s.includes('/') ? s.toLowerCase() : s;
}
exports.lowercaseIfSlug = lowercaseIfSlug;
//# sourceMappingURL=normalization.js.map