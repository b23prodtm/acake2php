"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getOwnOrganizations = exports.getTypedApplicationIdentifier = exports.getApplication = void 0;
async function getApplication(sdk, nameOrSlugOrId, options) {
    const { looksLikeInteger } = await Promise.resolve().then(() => require('./validation'));
    if (looksLikeInteger(nameOrSlugOrId)) {
        try {
            return await sdk.models.application.get(Number(nameOrSlugOrId), options);
        }
        catch (e) {
            const { instanceOf } = await Promise.resolve().then(() => require('../errors'));
            const { BalenaApplicationNotFound } = await Promise.resolve().then(() => require('balena-errors'));
            if (!instanceOf(e, BalenaApplicationNotFound)) {
                throw e;
            }
        }
    }
    return sdk.models.application.get(nameOrSlugOrId, options);
}
exports.getApplication = getApplication;
async function getTypedApplicationIdentifier(sdk, nameOrSlugOrId) {
    const { looksLikeInteger } = await Promise.resolve().then(() => require('./validation'));
    if (!looksLikeInteger(nameOrSlugOrId)) {
        return nameOrSlugOrId;
    }
    try {
        return (await sdk.models.application.get(Number(nameOrSlugOrId))).id;
    }
    catch (e) {
        const { instanceOf } = await Promise.resolve().then(() => require('../errors'));
        const { BalenaApplicationNotFound } = await Promise.resolve().then(() => require('balena-errors'));
        if (!instanceOf(e, BalenaApplicationNotFound)) {
            throw e;
        }
    }
    return nameOrSlugOrId;
}
exports.getTypedApplicationIdentifier = getTypedApplicationIdentifier;
async function getOwnOrganizations(sdk) {
    return await sdk.models.organization.getAll({
        $filter: {
            organization_membership: {
                $any: {
                    $alias: 'orm',
                    $expr: {
                        orm: {
                            user: await sdk.auth.getUserId(),
                        },
                    },
                },
            },
        },
        $orderby: 'name asc',
    });
}
exports.getOwnOrganizations = getOwnOrganizations;
//# sourceMappingURL=sdk.js.map