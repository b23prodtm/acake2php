import type * as SDK from 'balena-sdk';
import * as _ from 'lodash';
export declare const serviceIdToName: ((sdk: SDK.BalenaSDK, serviceId: number) => Promise<string | undefined>) & _.MemoizedFunction;
export declare const getDeviceAndAppFromUUID: ((sdk: SDK.BalenaSDK, deviceUUID: string, selectDeviceFields?: ("state" | "id" | "created_at" | "is_accessible_by_support_until__date" | "should_be_running__release" | "custom_latitude" | "custom_longitude" | "device_name" | "download_progress" | "ip_address" | "mac_address" | "is_connected_to_vpn" | "is_in_local_mode" | "is_locked_until__date" | "is_web_accessible" | "is_active" | "is_online" | "last_connectivity_event" | "last_vpn_event" | "latitude" | "local_id" | "location" | "longitude" | "note" | "os_variant" | "os_version" | "provisioning_progress" | "provisioning_state" | "status" | "status_sort_index" | "supervisor_version" | "uuid" | "vpn_address" | "api_heartbeat_state" | "memory_usage" | "memory_total" | "storage_block_device" | "storage_usage" | "storage_total" | "cpu_usage" | "cpu_temp" | "cpu_id" | "is_undervolted" | "overall_status" | "overall_progress" | "is_of__device_type" | "belongs_to__application" | "belongs_to__user" | "is_running__release" | "is_managed_by__service_instance" | "is_managed_by__device" | "should_be_managed_by__supervisor_release" | "device_config_variable" | "device_environment_variable" | "device_tag" | "manages__device" | "service_install" | "image_install" | "gateway_download")[] | undefined, selectAppFields?: ("slug" | "id" | "created_at" | "app_name" | "is_accessible_by_support_until__date" | "is_host" | "should_track_latest_release" | "is_public" | "is_archived" | "is_discoverable" | "is_stored_at__repository_url" | "application_type" | "is_for__device_type" | "depends_on__application" | "organization" | "should_be_running__release" | "application_config_variable" | "application_environment_variable" | "build_environment_variable" | "application_tag" | "owns__device" | "owns__release" | "is_depended_on_by__application" | "user__is_member_of__application" | "team_application_access")[] | undefined) => Promise<[SDK.Device, SDK.Application]>) & _.MemoizedFunction;
export declare const getDeviceAndMaybeAppFromUUID: ((sdk: SDK.BalenaSDK, deviceUUID: string, selectDeviceFields?: ("state" | "id" | "created_at" | "is_accessible_by_support_until__date" | "should_be_running__release" | "custom_latitude" | "custom_longitude" | "device_name" | "download_progress" | "ip_address" | "mac_address" | "is_connected_to_vpn" | "is_in_local_mode" | "is_locked_until__date" | "is_web_accessible" | "is_active" | "is_online" | "last_connectivity_event" | "last_vpn_event" | "latitude" | "local_id" | "location" | "longitude" | "note" | "os_variant" | "os_version" | "provisioning_progress" | "provisioning_state" | "status" | "status_sort_index" | "supervisor_version" | "uuid" | "vpn_address" | "api_heartbeat_state" | "memory_usage" | "memory_total" | "storage_block_device" | "storage_usage" | "storage_total" | "cpu_usage" | "cpu_temp" | "cpu_id" | "is_undervolted" | "overall_status" | "overall_progress" | "is_of__device_type" | "belongs_to__application" | "belongs_to__user" | "is_running__release" | "is_managed_by__service_instance" | "is_managed_by__device" | "should_be_managed_by__supervisor_release" | "device_config_variable" | "device_environment_variable" | "device_tag" | "manages__device" | "service_install" | "image_install" | "gateway_download")[] | undefined, selectAppFields?: ("slug" | "id" | "created_at" | "app_name" | "is_accessible_by_support_until__date" | "is_host" | "should_track_latest_release" | "is_public" | "is_archived" | "is_discoverable" | "is_stored_at__repository_url" | "application_type" | "is_for__device_type" | "depends_on__application" | "organization" | "should_be_running__release" | "application_config_variable" | "application_environment_variable" | "build_environment_variable" | "application_tag" | "owns__device" | "owns__release" | "is_depended_on_by__application" | "user__is_member_of__application" | "team_application_access")[] | undefined) => Promise<[SDK.Device, SDK.Application | undefined]>) & _.MemoizedFunction;
export declare function downloadOSImage(deviceType: string, outputPath: string, OSVersion?: string): Promise<string>;
