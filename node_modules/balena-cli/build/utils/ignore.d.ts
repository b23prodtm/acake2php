/// <reference types="node" />
import { Stats } from 'fs';
import type { Ignore } from '@balena/dockerignore';
export declare enum IgnoreFileType {
    DockerIgnore = 0,
    GitIgnore = 1
}
export declare class FileIgnorer {
    basePath: string;
    private dockerIgnoreEntries;
    private gitIgnoreEntries;
    private static ignoreFiles;
    constructor(basePath: string);
    getIgnoreFileType(relativePath: string): IgnoreFileType | null;
    addIgnoreFile(fullPath: string, type: IgnoreFileType): Promise<void>;
    filter: (filename: string) => boolean;
    private addEntry;
    private static contains;
}
export interface FileStats {
    filePath: string;
    relPath: string;
    stats: Stats;
}
export declare function getDockerIgnoreInstance(directory: string): Promise<Ignore>;
export interface ServiceDirs {
    [service: string]: string;
}
export declare function filterFilesWithDockerignore(projectDir: string, multiDockerignore: boolean, serviceDirsByService: ServiceDirs): Promise<{
    filteredFileList: FileStats[];
    dockerignoreFiles: FileStats[];
}>;
export declare function getDockerignoreByService(projectDir: string, multiDockerignore: boolean, serviceDirsByService: ServiceDirs): Promise<{
    [serviceName: string]: Ignore;
}>;
