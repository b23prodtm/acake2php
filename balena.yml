name: acake2php
description: >-
  Using the basic container orchestrator or engine to deploy and test, that's straitforward.
version: 1.0.0
type: sw.application
assets:
  repository:
    type: blob.asset
    data:
      url: 'https://github.com/b23prodtm/acake2php'
  logo:
    type: blob.asset
    data:
      url: >-
        https://raw.githubusercontent.com/b23prodtm/acake2php/master/acake2php.jpeg
data:
  applicationEnvironmentVariables:
    # Open https://${SERVER_NAME}/etc/getHashPassword.php or type $ ./configure.sh -h -p pass -s salt
    # Get new staff credentials (url=/admin/index.php)
    #- GET_HASH_PASSWORD: GETHASHPASSWORD.PHP

    # Database name
    - MYSQL_DATABASE: aria_db
    # Persistent ROOT connection credentials
    - MYSQL_HOST: localhost
    - MYSQL_ROOT_PASSWORD: mariadb

# Some optional configuration. The following default variables may be setup as your server preferences, set in open source:

    # CakePHP secrets
    #- CAKEPHP_SECRET_TOKEN: <secret-token>
    #- CAKEPHP_SECRET_SALT: <secret-salt>
    #- CAKEPHP_SECURITY_CIPHER_SEED: <cipher-seed>

    # Deployed Migration option
    - MIGRATE_OPTION: -v

      # The following values are options to change if needed
    # Binding a mysql container to a specific (public) IP address or all (0.0.0.0)
    - MYSQL_BIND_ADDRESS: 0.0.0.0
    - MYSQL_TCP_PORT: 3306

    # Persistent USER connection credentials
    - MYSQL_USER: maria
    - MYSQL_PASSWORD: maria-abc

    # Run as a different user-group space ($ id -g $USER)
    - PGID: 0
    # Run as a different user space ($ id -u $USER)
    - PUID: 0

        # Apache 2 httpd, or DNS CNAME of the host machine ($ hostname)
    - SERVER_NAME: www-machine.local

    # MariaDB Timezone
    - TZ: Europe/Paris

  defaultDeviceType: raspberrypi3-64
  supportedDeviceTypes:
    - raspberrypi3-64
    - raspberrypi4-64
    - raspberrypi400-64
post-provisioning: >-

  # A CakePHP 2.x application

  This webserver is featuring well-known functionalities as cool as posting some web contents with pictures stored in a database.
  Submodules may be installed via Composer packages.
  The deployment script was based on [Balena engine](http://www.balena.io).
  See more about [NodeJs dependencies](#nodejs-dependencies)

  - Apache 2.0 License

  ### How to run this app

  Simple click on the Deploy button, and create or use an existing fleet. Once done you can download the video-surveillance Balena Cloud base image and flash it to your device.
