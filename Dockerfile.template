# THIS file was generated for $DKR_ARCH %%BALENA_MACHINE_NAME%%
# Make changes to the Dockefile.template
# Docker architecture (x86_64, armhf, aarch64 )
ARG IMG_TAG
ARG DKR_ARCH
ARG PRIMARY_HUB
# Primary image is a Linux PHP with Apache 2 server pre-installed
FROM ${PRIMARY_HUB:-betothreeprod/apache-php7}:${IMG_TAG:-latest}-${DKR_ARCH:-%%BALENA_ARCH%%}

ENV INITSYSTEM off
ENV UDEV off
# ----------------------
# About Dockerfile ARGS:
# ALL the following ARGS are DUPLICATED in common.env and $DKR_ARCH.env
# and Scripts/fooargs.sh for development phase.
# If not set in common.env, it must be set in the host machine environment
# when ./start.sh or ./test.sh or in development phase.
# ----------------------
#                        Values in default (no-arg) production mode
#                        May be overriden in docker-compose.yml
#-----------------------
ARG CAKEPHP_DEBUG_LEVEL
ENV CAKEPHP_DEBUG_LEVEL ${CAKEPHP_DEBUG_LEVEL:-2}
ENV BALENA_MACHINE_NAME ${BALENA_MACHINE_NAME:-%%BALENA_MACHINE_NAME%%}
ARG SECONDARY_HUB
ENV SECONDARY_HUB ${SECONDARY_HUB:-'linuxserver/mariadb'}
ENV DKR_ARCH ${DKR_ARCH:-%%BALENA_ARCH%%}
ARG COLLECT_COVERAGE
ENV COLLECT_COVERAGE ${COLLECT_COVERAGE:-'False'}
ARG DB
ENV DB ${DB:-Mysql}
ARG MYSQL_HOST
ENV MYSQL_HOST ${MYSQL_HOST:-db}
ARG MYSQL_TCP_PORT
ENV MYSQL_TCP_PORT ${MYSQL_TCP_PORT:-3306}
ARG MYPHPCMS_DIR
ENV MYPHPCMS_DIR ${MYPHPCMS_DIR:-'app/webroot/php_cms'}
ARG MYPHPCMS_LOG
ENV MYPHPCMS_LOG ${MYPHPCMS_LOG:-'app/tmp/logs'}
ARG DATABASE_USER
ENV DATABASE_USER ${DATABASE_USER:-'root'}
ARG MYSQL_DATABASE
ENV MYSQL_DATABASE ${MYSQL_DATABASE:-'aria_db'}
ARG MYSQL_ROOT_PASSWORD
ENV MYSQL_ROOT_PASSWORD ${MYSQL_ROOT_PASSWORD:-'mariadb'}
ARG TEST_DATABASE_NAME
ENV TEST_DATABASE_NAME ${TEST_DATABASE_NAME:-'test'}
ARG MYSQL_USER
ENV MYSQL_USER ${MYSQL_USER:-'maria'}
ARG MYSQL_PASSWORD
ENV MYSQL_PASSWORD ${MYSQL_PASSWORD:-'maria-abc'}
ARG SERVER_NAME
ENV SERVER_NAME ${SERVER_NAME:-'acake2php.local'}
# Change uid and gid of apache to docker user uid/gid
ARG PUID
ENV PUID ${PUID:-0}
ARG PGID
ENV PGID ${PGID:-0}
# Must own the ip address
ARG HTTPD_LISTEN
ENV HTTPD_LISTEN ${HTTPD_LISTEN:-'*:80'}

# Use the default production configuration
#COPY $PHP_INI_DIR/php.ini-production $PHP_INI_DIR/php.ini
# RUN [ "cross-build-start" ]
RUN install_packages \
    git \
    openssh-client \
    tar \
    gzip \
    ca-certificates \
    zip \
    unzip \
    mariadb-client

RUN install_packages \
    memcached \
    libmemcached-dev
    # libicu libicu-dev

# just containers configuration
COPY etc /etc

WORKDIR /usr/src/

COPY vagrant-shell.sh .
RUN chmod 0755 vagrant-shell.sh
RUN ./vagrant-shell.sh php-settings-update extension memcached.so \
 && ./vagrant-shell.sh php-settings-update session.save_handler memcached \
 && ./vagrant-shell.sh php-settings-update session.save_path '127.0.0.1:11211,127.0.0.1:11212'

# Copy the source code into /var/www/localhost/htdocs/ inside the image
COPY . /var/www/localhost/htdocs/

# Configure the application
WORKDIR /var/www/localhost/htdocs/

# Change mode of bash Scripts
RUN chmod -R gu+xs deploy.sh configure.sh migrate-database.sh Scripts/

# Add cake and composer command to system path
ENV PATH "${PATH}:/var/www/localhost/htdocs/app/Console"
ENV PATH "${PATH}:/var/www/localhost/htdocs/app/Vendor/bin"

# Password Hash Verbose
# RUN cat app/webroot/php_cms/e13/etc/export_hash_password.sh | awk -F= '{print $2}' | tail -n 1

# Set default working directory
WORKDIR app

# Create tmp directory and make it writable by the web server
RUN mkdir -p \
    tmp/cache/models \
    tmp/cache/persistent \
    tmp/cache/long \
    tmp/logs \
  && chmod -R 1777 tmp

# Helper packages
RUN npm link balena-cloud

WORKDIR /var/www/localhost/htdocs/

RUN chmod 0755 *.sh
RUN ./deploy.sh ${DKR_ARCH} --nobuild --exit \
  && ./configure.sh --openshift -m -c -h -p pass -s word --development
# RUN [ "cross-build-end" ]

ENTRYPOINT ./migrate-database.sh -o -u -i --enable-authentication-plugin && /init
EXPOSE 80 443
